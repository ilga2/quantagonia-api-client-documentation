===================================================
Creating and Solving QUBO Problems
===================================================

.. contents:: Table of Contents
    :depth: 3


Creating a QUBO
------------------
There are several ways of creating a :class:`~quantagonia.qubo.model.QuboModel`:

- creating and modeling a :class:`~quantagonia.qubo.model.QuboModel` by hand
- load from file (:ref:`load_from_file`)
- converting from MIP (:ref:`mip_label`), Qiskit or Ocean (:ref:`converter_label`)

In this example a QUBO is modeled by hand and the resulting instance is printed:

.. literalinclude:: ../examples/model_qubo_native.py
   :lines: 1, 7-34


.. _load_from_file:

Loading and Storing QUBOs from/as files
==========================================

QUBOs can be stored in and loaded from files. See :doc:`qubo_format` for the used file format.

While the path to the QUBO file can directly be given to the solver/runner (ref) it is also possible to load and the edit the QUBO problem instance using

.. code-block::

    model = QuboModel.readQUBO("path to file") # load a qubo
    # ...
    # additional modeling of QUBO
    # ...
    model.writeQUBO("path to file") # store a qubo


Submitting QUBOs and MIPs for solving
--------------------------------------

To submit a QUBO to the Quantagonia Cloud first import the required modules and set your Quantagonia API key:

.. literalinclude:: ../examples/submit_qubo.py
   :lines: 1-5, 7

Submitting a modeled instance
================================

A :class:`QuboModel` can be solved (remotely) by  creating a Runner, specs and passing both to the QuboModel`s solve function:

.. literalinclude:: ../examples/model_qubo_native.py
   :lines: 38-42

Submitting files
===================
Alternatively it is possible to create the Runner and specs and simply pass a path to the QUBO file to the Runner.
Here the QUBO will be loaded and solved in one step:

.. literalinclude:: ../examples/submit_qubo.py
    :lines: 6, 8-

The same can also be done for multiple problems at once:

.. literalinclude:: ../examples/submit_batched.py
    :lines: 5-
