Search.setIndex({"docnames": ["index", "introduction/index", "introduction/qubo_format", "introduction/specs", "ref", "release_notes", "tutorials/IP2Qubo", "tutorials/converter", "tutorials/index", "tutorials/model"], "filenames": ["index.rst", "introduction/index.rst", "introduction/qubo_format.rst", "introduction/specs.rst", "ref.rst", "release_notes.rst", "tutorials/IP2Qubo.rst", "tutorials/converter.rst", "tutorials/index.rst", "tutorials/model.rst"], "titles": ["Welcome to the documentation of Quantagonia\u2019s API client!", "Introduction", "Quantagonia QUBO format", "QUBO Solver Specifications", "API Reference", "Release Notes", "Solving IP Problems and Conversion to QUBO", "Converting from Ocean and Qiskit", "Tutorials", "Creating and Solving QUBO Problems"], "terms": {"allow": [0, 3, 4], "you": [0, 3, 8], "solv": [0, 2, 3, 5, 8], "optim": [0, 2, 3, 4, 6, 8, 9], "problem": [0, 1, 2, 3, 4, 7, 8], "type": [0, 3, 4], "qubo": [0, 1, 5, 7, 8], "mip": [0, 4, 9], "us": [0, 2, 3, 4, 6, 7, 8, 9], "cloud": [0, 4, 6, 9], "text": 0, "min": 0, "max": 0, "quad": [0, 2], "x": [0, 2, 7], "top": 0, "q": [0, 2], "t": [0, 6, 9], "0": [0, 2, 3, 4, 5, 6, 7, 9], "1": [0, 2, 3, 4, 6, 7, 8, 9], "m": 0, "symmetr": [0, 2], "c": [0, 2, 9], "a_": 0, "le": [0, 2], "b_": 0, "ge": 0, "eq": 0, "mathbb": [0, 2], "z": 0, "n": [0, 2, 9], "l": 0, "u": 0, "addition": [0, 5], "can": [0, 2, 3, 4, 6, 9], "creat": [0, 4, 7, 8], "import": [0, 3, 4, 6, 7, 9], "d": [0, 5, 7], "wave": [0, 5, 7], "ocean": [0, 8, 9], "pyqubo": 0, "qiskit": [0, 8, 9], "convert": [0, 4, 6, 8, 9], "pulp": [0, 4, 6], "ip": [0, 8, 9], "For": [0, 3, 4, 6], "valid": [0, 4], "kei": [0, 4, 6, 7, 9], "pleas": 0, "contact": 0, "support": [0, 4, 5, 6], "com": 0, "introduct": [0, 8], "format": [0, 1, 4, 6, 8, 9], "solver": [0, 1, 2, 5, 6, 8, 9], "specif": [0, 1, 4, 8, 9], "tutori": [0, 6], "convers": [0, 7, 8, 9], "from": [0, 2, 3, 4, 5, 6, 8], "refer": 0, "model": [0, 2, 6, 8], "adapt": 0, "releas": [0, 9], "note": [0, 3, 4, 6, 9], "The": [0, 2, 3, 4, 5, 6, 9], "i": [0, 2, 3, 4, 5, 6, 7, 8, 9], "avail": [0, 8], "via": [0, 3, 5, 6, 7], "pypi": 0, "python": 0, "3": [0, 2, 3, 9], "8": 0, "requir": [0, 8, 9], "simpli": [0, 8, 9], "run": [0, 3], "follow": [0, 2, 3], "packag": [0, 9], "pip": 0, "thi": [0, 1, 2, 4, 5, 6, 7, 8, 9], "simpl": 0, "submit": [0, 4, 6], "cloud_runn": [0, 4, 9], "cloudrunn": [0, 4, 9], "spec_build": [0, 3, 4, 9], "qubospecbuild": [0, 3, 4, 5, 9], "enum": [0, 4, 6], "hybridsolveroptsens": [0, 4, 9], "api_kei": [0, 4, 6, 7, 9], "your": [0, 6, 7, 8, 9], "setup": [0, 9], "qubomodel": [0, 4, 7, 9], "variabl": [0, 2, 3, 4, 6, 7, 9], "x0": [0, 9], "addvari": [0, 4, 9], "x_0": [0, 6, 9], "initi": [0, 4, 6, 9], "x1": [0, 9], "x_1": [0, 6, 9], "x2": [0, 9], "x_2": [0, 2, 6, 9], "x3": [0, 9], "x_3": [0, 6, 9], "x4": [0, 9], "x_4": [0, 6, 9], "build": [0, 4, 9], "object": [0, 3, 4, 5, 6, 7, 9], "2": [0, 2, 3, 6, 7, 9], "set": [0, 2, 4, 6, 7, 8, 9], "sens": [0, 2, 4, 7, 9], "minim": [0, 2, 4, 7, 9], "print": [0, 4, 6, 7, 9], "eval": [0, 4, 9], "runner": [0, 4, 9], "load": 0, "default": [0, 4, 5, 6, 9], "spec": [0, 3, 4, 9], "re": [0, 8, 9], "getd": [0, 9], "runtim": [0, 5, 9], "time": [0, 2, 4, 9], "statu": [0, 4, 9], "sol_statu": [0, 4, 9], "section": 1, "contain": [1, 3, 4, 9], "introductori": 1, "materi": 1, "about": [1, 4], "optimz": 1, "file": [1, 4, 6], "quantagonia": [1, 3, 4, 6, 7, 8, 9], "document": [2, 4], "describ": [2, 6], "form": 2, "tqx": 2, "where": [2, 9], "sought": 2, "solut": [2, 4, 5, 6, 9], "vector": 2, "r": 2, "matrix": [2, 4], "usual": [2, 3, 9], "end": [2, 9], "should": [2, 4], "have": [2, 4], "header": 2, "all": [2, 4, 6, 9], "line": 2, "separ": 2, "space": [2, 3], "first": [2, 3, 9], "string": [2, 4, 5], "which": [2, 3, 4, 6, 9], "maxim": [2, 4, 9], "second": [2, 3, 4, 9], "need": 2, "singl": [2, 4, 6], "integ": [2, 4, 6], "num_problem": 2, "number": [2, 4, 6, 7], "specifi": [2, 4, 6], "matric": 2, "each": [2, 3, 4, 6, 7], "principl": 2, "view": 2, "when": [2, 3, 4], "more": [2, 3, 6], "than": [2, 4], "present": 2, "accumul": 2, "sum": [2, 7], "them": [2, 6], "up": [2, 3], "report": 2, "structur": 2, "recurs": 2, "new": [2, 4, 8], "we": [2, 3, 4, 8], "one": [2, 4, 7, 9], "float": [2, 4, 6], "penalti": [2, 4, 6, 7], "offset": 2, "constant": [2, 4], "energi": 2, "two": [2, 6], "nnz": 2, "dimens": 2, "row": 2, "column": 2, "non": [2, 4, 9], "zero": [2, 9], "entri": [2, 4], "upper": [2, 4], "triangl": [2, 4], "written": 2, "j": [2, 7], "q_": 2, "ij": 2, "valu": [2, 3, 4, 5, 6, 9], "posit": 2, "becaus": [2, 3], "onli": [2, 3, 4, 5], "diagon": 2, "triangular": 2, "automat": [2, 4, 6], "make": [2, 3, 4, 6], "formal": 2, "mean": 2, "fix": [2, 3, 4, 9], "e": [2, 3, 5], "whose": 2, "assign": [2, 4, 9], "ahead": 2, "f": [2, 3, 7, 9], "ix": [2, 9], "val": [2, 9], "": [2, 4, 6, 9], "index": 2, "either": [2, 4, 6], "offest": 2, "6": [2, 3, 9], "4": [2, 3, 6, 8], "5": [2, 6], "repeat": 2, "abov": 2, "here": [2, 9], "same": [2, 4, 9], "without": [2, 3], "comment": 2, "correct": 2, "If": [2, 3, 4, 8], "take": [2, 4, 6], "would": 2, "begin": 2, "bmatrix": 2, "some": [3, 9], "option": [3, 6, 9], "ar": [3, 4, 6, 8, 9], "guid": 3, "behavior": 3, "conveni": 3, "most": 3, "relev": 3, "expos": 3, "builder": 3, "It": [3, 4, 5, 6, 7, 9], "also": [3, 4, 8, 9], "possibl": [3, 5, 6, 7, 9], "provid": [3, 4, 8], "json": [3, 4], "instanti": 3, "program": [3, 4, 6], "given": [3, 4, 9], "sever": [3, 9], "control": [3, 4], "interupt": 3, "after": [3, 4, 9], "return": [3, 4, 5, 6, 7, 9], "best": 3, "found": [3, 4, 9], "along": 3, "tell": 3, "how": 3, "much": 3, "potenti": [3, 8], "could": 3, "process": [3, 4, 6], "ordinari": 3, "quantum": [3, 5, 6, 8], "anneal": [3, 6], "retriev": [3, 4], "know": 3, "far": 3, "might": 3, "awai": 3, "an": [3, 4, 5, 6, 7, 8, 9], "time_limit": 3, "10": [3, 6, 8], "set_time_limit": 3, "branch": [3, 4, 5], "bound": [3, 4, 5, 9], "explor": [3, 8], "root": [3, 4], "mimick": 3, "ani": [3, 4], "qualiti": 3, "assess": 3, "proof": 3, "global": 3, "compar": 3, "other": [3, 8], "sure": 3, "stop": [3, 4], "maximum": [3, 4, 6, 9], "reach": [3, 4, 6], "our": 3, "still": 3, "true": [3, 4, 6], "case": 3, "num_nod": 3, "set_max_num_nod": [3, 4], "onc": [3, 6, 9], "toler": 3, "1e": 3, "9": [3, 4, 6, 7], "differ": [3, 6, 9], "between": 3, "f\u02c9": 3, "henc": 3, "increas": 3, "continu": 3, "search": [3, 4], "adjust": [3, 4, 6], "abs_gap": [3, 4], "set_absolute_gap": [3, 4], "01": [3, 9], "defin": 3, "ast": 3, "bar": 3, "improv": 3, "known": 3, "rel_gap": [3, 4], "set_relative_gap": [3, 4], "befor": [3, 4], "actual": 3, "perform": 3, "variou": [3, 9], "routin": 3, "full": [3, 4], "g": [3, 5], "due": 3, "argument": [3, 4, 6], "deriv": 3, "implic": [3, 9], "etc": [3, 5], "enabl": [3, 4, 5], "disabl": [3, 4], "gener": [3, 4], "set_presolv": [3, 4], "fals": [3, 4], "instead": [3, 5, 9], "compon": 3, "exampl": [3, 6, 7, 9], "strengthen": 3, "set_coeff_strengthen": 3, "userwarn": 3, "paramet": [3, 4], "coeff_strengthen": 3, "ha": [3, 4, 9], "effect": 3, "similar": 3, "sub": 3, "dure": [3, 4], "turn": 3, "off": 3, "set_node_presolv": [3, 4], "work": 3, "just": 3, "fine": 3, "howev": [3, 7], "instanc": [3, 4, 6, 7], "mai": 3, "benefici": 3, "through": 3, "mani": [3, 9], "smaller": [3, 9], "small": 3, "enough": 3, "explicitli": [3, 4], "done": [3, 5, 9], "extrem": 3, "fast": 3, "set_enumer": [3, 4], "version": [3, 5], "absolute_gap": [3, 4], "09": 3, "relative_gap": [3, 4], "3600": 3, "epsilon": 3, "seed": 3, "36848232890347": 3, "decompos": 3, "maxit": 3, "100000": 3, "node_presolv": [3, 4], "node_impl": 3, "branching_rul": 3, "max_contribut": 3, "branching_scor": 3, "enumeration_algorithm": 3, "cpu_grai": 3, "enumeration_threshold": 3, "16": 3, "primal_solv": 3, "no_solv": 3, "dual_solv": 3, "frank_wolf": 3, "500000": 3, "max_dual_gap": 3, "02": 3, "max_rel_dual_gap": 3, "05": 3, "smasher_step": 3, "smasher_ep": 3, "dual_root_node_sdp": 3, "dual_fix": 3, "dual_impl": 3, "convexif": 3, "sdp_shift": 3, "variant": 3, "project": 3, "class": [4, 6, 7], "A": [4, 9], "repres": 4, "quadrat": [4, 6, 7], "unconstrain": [4, 6], "binari": [4, 6, 7], "method": [4, 5], "name": [4, 6, 7], "str": 4, "none": 4, "disable_warn": 4, "add": 4, "bool": 4, "warn": 4, "messag": 4, "displai": 4, "alreadi": 4, "qubovari": 4, "wa": 4, "ad": 4, "rais": 4, "function": [4, 6, 7, 9], "current": 4, "getnnzuppertriangl": 4, "get": 4, "nonzero": 4, "correspond": 4, "term": 4, "exclud": 4, "shift": 4, "int": 4, "getnnzfullmatrix": 4, "comput": 4, "demand": 4, "isvalid": 4, "check": 4, "thei": [4, 6], "been": 4, "reduc": 4, "right": 4, "wai": [4, 6, 9], "indic": 4, "whether": [4, 8], "condit": 4, "classmethod": 4, "readqubo": [4, 9], "path": [4, 9], "read": 4, "properti": 4, "pass": [4, 9], "member": 4, "runtimeerror": 4, "dict": 4, "dictionari": [4, 6, 9], "list": 4, "result": [4, 6, 9], "solution_fil": [4, 9], "solver_log": [4, 9], "iter": [4, 6, 9], "node": [4, 9], "nodes_per_sec": 4, "best_nod": 4, "best_tim": 4, "num_quantum_solut": 4, "solver_mix": 4, "async": 4, "solveasync": 4, "asynchron": 4, "keyerror": 4, "exist": 4, "writequbo": [4, 9], "write": 4, "destin": 4, "except": 4, "filenotfounderror": 4, "cannot": 4, "permissionerror": 4, "doe": [4, 6, 7], "suffici": 4, "permiss": 4, "access": 4, "typeerror": 4, "server": 4, "hybridsolverserv": 4, "prod": 4, "suppress_log": 4, "subclass": 4, "authent": 4, "hybrid": 4, "servic": 4, "product": 4, "boolean": 4, "suppress": 4, "log": [4, 5, 9], "output": 4, "https_client": 4, "specshttpsclient": 4, "request": 4, "interrupt_job": 4, "jobid": 4, "modul": [4, 9], "uuid": 4, "usr": 4, "lib": 4, "python3": 4, "py": 4, "send": 4, "interrupt": 4, "signal": 4, "execut": [4, 9], "job": [4, 5, 9], "respons": 4, "interrupt_job_async": 4, "problem_fil": 4, "kwarg": 4, "keyword": 4, "submit_callback": 4, "custom": 4, "callback": 4, "call": 4, "poll_frequ": 4, "frequenc": 4, "poll": 4, "new_incumbent_callback": 4, "incumb": 4, "batch": 4, "item": [4, 6, 7, 9], "timeout": 4, "amount": 4, "wait": 4, "finish": [4, 9], "out": 4, "14400": 4, "asynchon": 4, "solvebatch": [4, 9], "solvebatchedasync": 4, "waitforjob": 4, "batch_siz": [4, 9], "jobstatu": 4, "identifi": 4, "until": 4, "final": [4, 6, 9], "exceed": 4, "updat": 4, "solverlog": 4, "size": 4, "termin": 4, "waitforjobasync": 4, "mipspecbuild": [4, 9], "mix": [4, 9], "extend": 4, "specbuild": 4, "base": 4, "problem_typ": 4, "set_heurist": 4, "heurist": [4, 5], "mip_heuristic_effort": 4, "rang": [4, 7, 8, 9], "percentag": 4, "valueerror": 4, "within": 4, "spec_path": 4, "home": 4, "jenkin": 4, "workspac": 4, "client": 4, "gitlab_dir": 4, "default_spec": 4, "root_node_onli": 4, "restrict": 4, "tree": 4, "absolut": [4, 9], "gap": [4, 9], "fall": 4, "below": 4, "set_decomposit": 4, "decomposit": 4, "enumer": 4, "subproblem": 4, "threshold": 4, "max_num_nod": 4, "limit": [4, 6, 7], "greater": 4, "equal": 4, "presolv": [4, 5, 9], "set_objective_cutoff": 4, "cutoff_valu": 4, "cutoff": 4, "rel": [4, 9], "hold": [4, 9], "dwavebqmadapt": 4, "dimod": [4, 7], "binaryquadraticmodel": 4, "bqm": 4, "so": [4, 9], "obtain": 4, "dwavecqmadapt": [4, 7], "1000": 4, "constrainedquadraticmodel": [4, 7], "checkcqmsupport": 4, "cqm": [4, 7], "input": 4, "unsupport": 4, "constraint": [4, 6, 7], "linear": [4, 7], "convertlinearconstraint": 4, "convertobject": 4, "qiskitqpadapt": [4, 7], "ibm": 4, "qiskit_optim": 4, "quadraticprogram": [4, 7], "__init__": 4, "1e3": 4, "checkqpsupport": 4, "qp": [4, 7], "pyquboadapt": 4, "alwai": 4, "assum": 4, "pqm": 4, "qpulp_adapt": [4, 6], "qpulpadapt": [4, 6], "languag": 4, "getsolv": [4, 6], "connect": 4, "hybridsolverconnectiontyp": [4, 6], "spec_dict": 4, "keep_fil": 4, "recommend": [4, 8], "keep": 4, "ip2qubo": 4, "verbos": [4, 6], "scaleequalityconstraint": 4, "scaleobject": 4, "intermedi": 4, "addit": [4, 9], "scale": [4, 6], "var": [4, 9], "pair": 4, "quboexpress": 4, "fromip": 4, "mip_format": 4, "mipsourceformat": 4, "toqubo": 4, "transform": 4, "weight": [4, 6, 7], "union": 4, "factor": 4, "accept": [4, 9], "appli": [4, 6], "altern": [4, 6, 9], "respect": 4, "well": 4, "individu": [4, 6], "ipviaqubosolv": 4, "abstract": [4, 6], "inform": 4, "state": 4, "reportsolut": 4, "solveip": [4, 6], "lpproblem": [4, 6], "automaticpenaltyscalingipviaqubosolv": [4, 6], "initial_penalti": [4, 6], "hsolver_typ": 4, "max_it": [4, 6], "100": [4, 6], "find": 4, "feasibl": 4, "oneshotipviaqubosolv": [4, 6], "shot": [4, 6], "55": 5, "now": 5, "statist": [5, 9], "like": [5, 8], "54": [5, 6], "score": 5, "decis": 5, "53": 5, "coeffici": 5, "tighten": 5, "part": 5, "longer": [5, 9], "remov": 5, "simul": 5, "add_quantum_heurist": 5, "even": 6, "though": 6, "directli": [6, 9], "effici": 6, "usag": 6, "knapsack": 6, "api": [6, 7, 9], "prob": 6, "lpmaxim": 6, "lpvariabl": 6, "lpbinari": 6, "x_5": 6, "x_6": 6, "x_7": 6, "x_8": 6, "36": 6, "43": 6, "90": 6, "45": 6, "30": [6, 9], "56": 6, "67": 6, "95": 6, "98": 6, "obj": 6, "38": 6, "24": 6, "40": 6, "25": 6, "37": 6, "59": 6, "150": 6, "capac": [6, 7], "offer": 6, "q_solver": 6, "v": 6, "varvalu": 6, "optimis": 6, "screen": 6, "mip_obj": 6, "back": [6, 9], "approach": [6, 9], "serv": 6, "layer": 6, "chang": 6, "featur": 6, "hardwar": [6, 9], "qaoa": 6, "algorithm": 6, "explain": 6, "detail": 6, "chapter": 6, "bridg": [6, 8], "analyt": [6, 8], "formul": [6, 8], "lectur": 6, "There": [6, 9], "enforc": 6, "as_qubo": 6, "give": 6, "sequenti": [6, 9], "With": 6, "inflat": 6, "met": 6, "decreas": 6, "slightli": 6, "Or": 6, "own": [6, 8], "metric": 6, "try": 6, "error": 6, "implement": [6, 7], "Then": 6, "start": 6, "qubo_obj": 6, "footnot": [6, 8], "glover": [6, 8], "fred": [6, 8], "kochenberg": [6, 8], "gari": [6, 8], "du": [6, 8], "yu": [6, 8], "2019": [6, 8], "4or": [6, 8], "17": [6, 8], "335": [6, 8], "371": [6, 8], "doi": [6, 8], "1007": [6, 8], "s10288": [6, 8], "019": [6, 8], "00424": [6, 8], "y": [6, 7, 8], "tayur": 6, "sridhar": 6, "venturelli": 6, "david": 6, "bernal": 6, "2020": 6, "47": 6, "779": 6, "carnegi": 6, "mellon": 6, "univers": 6, "pittsburgh": 6, "pennsylvania": 6, "usa": 6, "pack": 7, "def": 7, "build_ocean_cqm": 7, "7": 7, "y_j": 7, "bin": 7, "x_i_j": 7, "y_": 7, "len": [7, 9], "x_": 7, "_": 7, "set_object": 7, "ensur": 7, "exactli": 7, "add_constraint": 7, "label": 7, "item_placing_": 7, "total": 7, "exce": 7, "capacity_bin_": 7, "__name__": 7, "__main__": 7, "qubo_convert": 7, "1e2": 7, "In": [7, 8, 9], "while": [7, 9], "build_qiskit_qp": 7, "binary_var": 7, "linear_constraint": 7, "rh": 7, "lhs_x": 7, "lhs_y": 7, "prettyprint": 7, "welcom": 8, "seri": 8, "cover": 8, "topic": 8, "relat": 8, "includ": 8, "framework": 8, "dive": 8, "tailor": 8, "look": 8, "complex": 8, "want": 8, "research": 8, "valuabl": 8, "tool": 8, "achiev": 8, "goal": 8, "world": 8, "hand": 9, "evalu": 9, "see": 9, "edit": 9, "To": 9, "o": 9, "remot": 9, "both": 9, "mp": 9, "step": 9, "input_file_path": 9, "join": 9, "dirnam": 9, "abspath": 9, "__file__": 9, "example3": 9, "res_dict": 9, "idx": 9, "n1": 9, "success": 9, "nquantagonia": 9, "hybridsolv": 9, "ncopyright": 9, "2023": 9, "gmbh": 9, "nhybridsolv": 9, "integr": 9, "open": 9, "sourc": 9, "nfloat": 9, "point": 9, "datatyp": 9, "doubl": 9, "nread": 9, "num": 9, "noptim": 9, "nbranch": 9, "rule": 9, "contribut": 9, "nrun": 9, "cpu": 9, "nstart": 9, "npresolv": 9, "00": 9, "nthe": 9, "nsolver": 9, "wall": 9, "500000e": 9, "000000e": 9, "0000e": 9, "dual": 9, "clip": 9, "oscil": 9, "multipl": 9, "advantag": 9, "queu": 9, "drawback": 9, "subsequ": 9, "therefor": 9, "especi": 9, "larger": 9, "mip_path0": 9, "mip_path1": 9, "example2": 9, "qubo_path": 9, "mip_spec": 9, "qubo_spec": 9, "arrai": 9, "order": 9, "match": 9}, "objects": {"quantagonia.cloud.cloud_runner": [[4, 0, 1, "", "CloudRunner"]], "quantagonia.cloud.cloud_runner.CloudRunner": [[4, 1, 1, "", "https_client"], [4, 2, 1, "", "interrupt_job"], [4, 2, 1, "", "interrupt_job_async"], [4, 2, 1, "", "solve"], [4, 2, 1, "", "solveAsync"], [4, 2, 1, "", "solveBatched"], [4, 2, 1, "", "solveBatchedAsync"], [4, 2, 1, "", "waitForJob"], [4, 2, 1, "", "waitForJobAsync"]], "quantagonia.enums": [[4, 0, 1, "", "HybridSolverOptSenses"]], "quantagonia.enums.HybridSolverOptSenses": [[4, 1, 1, "", "MAXIMIZE"], [4, 1, 1, "", "MINIMIZE"]], "quantagonia.pulp.qpulp_adapter": [[4, 0, 1, "", "QPuLPAdapter"]], "quantagonia.pulp.qpulp_adapter.QPuLPAdapter": [[4, 2, 1, "", "getSolver"]], "quantagonia.qubo": [[4, 3, 0, "-", "adapters"]], "quantagonia.qubo.adapters": [[4, 0, 1, "", "DWaveBQMAdapter"], [4, 0, 1, "", "DWaveCQMAdapter"], [4, 0, 1, "", "PyQUBOAdapter"], [4, 0, 1, "", "QiskitQPAdapter"]], "quantagonia.qubo.adapters.DWaveBQMAdapter": [[4, 2, 1, "", "convert"]], "quantagonia.qubo.adapters.DWaveCQMAdapter": [[4, 2, 1, "", "checkCQMSupported"], [4, 2, 1, "", "convert"], [4, 2, 1, "", "convertLinearConstraints"], [4, 2, 1, "", "convertObjective"]], "quantagonia.qubo.adapters.PyQUBOAdapter": [[4, 2, 1, "", "convert"]], "quantagonia.qubo.adapters.QiskitQPAdapter": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "checkQPSupported"], [4, 2, 1, "", "convert"], [4, 2, 1, "", "convertLinearConstraints"], [4, 2, 1, "", "convertObjective"]], "quantagonia.qubo.ip2qubo": [[4, 0, 1, "", "AutomaticPenaltyScalingIPviaQUBOSolver"], [4, 0, 1, "", "IP2Qubo"], [4, 0, 1, "", "IPviaQUBOSolver"], [4, 0, 1, "", "OneShotIPviaQUBOSolver"]], "quantagonia.qubo.ip2qubo.AutomaticPenaltyScalingIPviaQUBOSolver": [[4, 1, 1, "", "api_key"], [4, 1, 1, "", "hsolver_type"], [4, 1, 1, "", "initial_penalty"]], "quantagonia.qubo.ip2qubo.IP2Qubo": [[4, 1, 1, "", "constraints"], [4, 2, 1, "", "fromIP"], [4, 1, 1, "", "objective"], [4, 1, 1, "", "sense"], [4, 2, 1, "", "toQUBO"], [4, 1, 1, "", "vars"], [4, 1, 1, "", "verbose"]], "quantagonia.qubo.ip2qubo.IPviaQUBOSolver": [[4, 1, 1, "", "ip2qubo"], [4, 1, 1, "", "iter"], [4, 2, 1, "", "reportSolution"], [4, 2, 1, "", "solveIP"], [4, 1, 1, "", "verbose"]], "quantagonia.qubo.model": [[4, 0, 1, "", "QuboModel"]], "quantagonia.qubo.model.QuboModel": [[4, 2, 1, "", "addVariable"], [4, 2, 1, "", "eval"], [4, 2, 1, "", "getNNZUpperTriangle"], [4, 2, 1, "", "getNnzFullMatrix"], [4, 2, 1, "", "isValid"], [4, 2, 1, "", "readQUBO"], [4, 4, 1, "", "sense"], [4, 2, 1, "", "solve"], [4, 2, 1, "", "solveAsync"], [4, 2, 1, "", "variable"], [4, 2, 1, "", "writeQUBO"]], "quantagonia": [[4, 3, 0, "-", "spec_builder"]], "quantagonia.spec_builder": [[4, 0, 1, "", "MIPSpecBuilder"], [4, 0, 1, "", "QUBOSpecBuilder"]], "quantagonia.spec_builder.MIPSpecBuilder": [[4, 2, 1, "", "set_heuristics"]], "quantagonia.spec_builder.QUBOSpecBuilder": [[4, 2, 1, "", "root_node_only"], [4, 2, 1, "", "set_absolute_gap"], [4, 2, 1, "", "set_decomposition"], [4, 2, 1, "", "set_enumeration"], [4, 2, 1, "", "set_max_num_nodes"], [4, 2, 1, "", "set_node_presolve"], [4, 2, 1, "", "set_objective_cutoff"], [4, 2, 1, "", "set_presolve"], [4, 2, 1, "", "set_relative_gap"]]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:module", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "module", "Python module"], "4": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "document": [0, 3], "quantagonia": [0, 2], "": [0, 3], "api": [0, 4], "client": 0, "content": [0, 1, 3, 4, 8, 9], "instal": 0, "exampl": [0, 2], "introduct": 1, "qubo": [2, 3, 4, 6, 9], "format": 2, "descript": 2, "file": [2, 3, 9], "syntax": 2, "solver": [3, 4], "specif": 3, "thi": 3, "termin": 3, "set": 3, "time": 3, "limit": 3, "max": 3, "number": 3, "node": 3, "absolut": 3, "gap": 3, "rel": 3, "presolv": 3, "coeffici": 3, "strenghten": 3, "solut": 3, "strategi": 3, "enumer": 3, "default": 3, "refer": 4, "tabl": [4, 9], "model": [4, 9], "solv": [4, 6, 9], "option": 4, "adapt": 4, "d": 4, "wave": 4, "pyqubo": 4, "qiskit": [4, 7], "ip": [4, 6], "convers": [4, 6], "releas": 5, "note": 5, "problem": [6, 9], "creat": [6, 9], "mip": 6, "convert": 7, "from": [7, 9], "ocean": 7, "tutori": 8, "load": 9, "store": 9, "submit": 9, "instanc": 9}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to the documentation of Quantagonia\u2019s API client!": [[0, "welcome-to-the-documentation-of-quantagonia-s-api-client"]], "Contents of documentation:": [[0, null]], "Installation": [[0, "installation"]], "Example": [[0, "example"], [2, "example"]], "Introduction": [[1, "introduction"]], "Contents:": [[1, null], [8, null]], "Quantagonia QUBO format": [[2, "quantagonia-qubo-format"]], "Description": [[2, "description"]], "File syntax": [[2, "file-syntax"]], "QUBO Solver Specifications": [[3, "qubo-solver-specifications"]], "This Document`s Content": [[3, "this-document-s-content"]], "Termination Settings": [[3, "termination-settings"]], "Time limit": [[3, "time-limit"]], "Max number of nodes": [[3, "max-number-of-nodes"]], "Absolute gap": [[3, "absolute-gap"]], "Relative gap": [[3, "relative-gap"]], "Presolve settings": [[3, "presolve-settings"]], "Presolve": [[3, "presolve"]], "Coefficient strenghtening": [[3, "coefficient-strenghtening"]], "Node presolve": [[3, "node-presolve"]], "Solution strategy": [[3, "solution-strategy"]], "Enumeration": [[3, "enumeration"]], "Default Solver Specification File": [[3, "default-solver-specification-file"]], "API Reference": [[4, "api-reference"]], "Table of Contents": [[4, "table-of-contents"], [9, "table-of-contents"]], "Modeling QUBOs": [[4, "modeling-qubos"]], "Solving": [[4, "solving"]], "Solver Options": [[4, "module-quantagonia.spec_builder"]], "Adapters for D-Wave, PyQUBO, Qiskit": [[4, "adapters-for-d-wave-pyqubo-qiskit"]], "IP Solver and Conversion": [[4, "ip-solver-and-conversion"]], "Release Notes": [[5, "release-notes"]], "Solving IP Problems and Conversion to QUBO": [[6, "solving-ip-problems-and-conversion-to-qubo"]], "Creating a MIP": [[6, "creating-a-mip"]], "Solving MIP as QUBO": [[6, "solving-mip-as-qubo"]], "Converting from Ocean and Qiskit": [[7, "converting-from-ocean-and-qiskit"]], "Converting from Ocean": [[7, "converting-from-ocean"]], "Converting from Qiskit": [[7, "converting-from-qiskit"]], "Tutorials": [[8, "tutorials"]], "Creating and Solving QUBO Problems": [[9, "creating-and-solving-qubo-problems"]], "Creating a QUBO": [[9, "creating-a-qubo"]], "Loading and Storing QUBOs from/as files": [[9, "loading-and-storing-qubos-from-as-files"]], "Submitting QUBOs for solving": [[9, "submitting-qubos-for-solving"]], "Submitting a modeled instance": [[9, "submitting-a-modeled-instance"]], "Submitting files": [[9, "submitting-files"]]}, "indexentries": {"automaticpenaltyscalingipviaqubosolver (class in quantagonia.qubo.ip2qubo)": [[4, "quantagonia.qubo.ip2qubo.AutomaticPenaltyScalingIPviaQUBOSolver"]], "cloudrunner (class in quantagonia.cloud.cloud_runner)": [[4, "quantagonia.cloud.cloud_runner.CloudRunner"]], "dwavebqmadapter (class in quantagonia.qubo.adapters)": [[4, "quantagonia.qubo.adapters.DWaveBQMAdapter"]], "dwavecqmadapter (class in quantagonia.qubo.adapters)": [[4, "quantagonia.qubo.adapters.DWaveCQMAdapter"]], "hybridsolveroptsenses (class in quantagonia.enums)": [[4, "quantagonia.enums.HybridSolverOptSenses"]], "ip2qubo (class in quantagonia.qubo.ip2qubo)": [[4, "quantagonia.qubo.ip2qubo.IP2Qubo"]], "ipviaqubosolver (class in quantagonia.qubo.ip2qubo)": [[4, "quantagonia.qubo.ip2qubo.IPviaQUBOSolver"]], "maximize (quantagonia.enums.hybridsolveroptsenses attribute)": [[4, "quantagonia.enums.HybridSolverOptSenses.MAXIMIZE"]], "minimize (quantagonia.enums.hybridsolveroptsenses attribute)": [[4, "quantagonia.enums.HybridSolverOptSenses.MINIMIZE"]], "mipspecbuilder (class in quantagonia.spec_builder)": [[4, "quantagonia.spec_builder.MIPSpecBuilder"]], "oneshotipviaqubosolver (class in quantagonia.qubo.ip2qubo)": [[4, "quantagonia.qubo.ip2qubo.OneShotIPviaQUBOSolver"]], "pyquboadapter (class in quantagonia.qubo.adapters)": [[4, "quantagonia.qubo.adapters.PyQUBOAdapter"]], "qpulpadapter (class in quantagonia.pulp.qpulp_adapter)": [[4, "quantagonia.pulp.qpulp_adapter.QPuLPAdapter"]], "qubospecbuilder (class in quantagonia.spec_builder)": [[4, "quantagonia.spec_builder.QUBOSpecBuilder"]], "qiskitqpadapter (class in quantagonia.qubo.adapters)": [[4, "quantagonia.qubo.adapters.QiskitQPAdapter"]], "qubomodel (class in quantagonia.qubo.model)": [[4, "quantagonia.qubo.model.QuboModel"]], "__init__() (quantagonia.qubo.adapters.qiskitqpadapter method)": [[4, "quantagonia.qubo.adapters.QiskitQPAdapter.__init__"]], "addvariable() (quantagonia.qubo.model.qubomodel method)": [[4, "quantagonia.qubo.model.QuboModel.addVariable"]], "api_key (quantagonia.qubo.ip2qubo.automaticpenaltyscalingipviaqubosolver attribute)": [[4, "quantagonia.qubo.ip2qubo.AutomaticPenaltyScalingIPviaQUBOSolver.api_key"]], "checkcqmsupported() (quantagonia.qubo.adapters.dwavecqmadapter method)": [[4, "quantagonia.qubo.adapters.DWaveCQMAdapter.checkCQMSupported"]], "checkqpsupported() (quantagonia.qubo.adapters.qiskitqpadapter method)": [[4, "quantagonia.qubo.adapters.QiskitQPAdapter.checkQPSupported"]], "constraints (quantagonia.qubo.ip2qubo.ip2qubo attribute)": [[4, "quantagonia.qubo.ip2qubo.IP2Qubo.constraints"]], "convert() (quantagonia.qubo.adapters.dwavebqmadapter method)": [[4, "quantagonia.qubo.adapters.DWaveBQMAdapter.convert"]], "convert() (quantagonia.qubo.adapters.dwavecqmadapter method)": [[4, "quantagonia.qubo.adapters.DWaveCQMAdapter.convert"]], "convert() (quantagonia.qubo.adapters.pyquboadapter method)": [[4, "quantagonia.qubo.adapters.PyQUBOAdapter.convert"]], "convert() (quantagonia.qubo.adapters.qiskitqpadapter method)": [[4, "quantagonia.qubo.adapters.QiskitQPAdapter.convert"]], "convertlinearconstraints() (quantagonia.qubo.adapters.dwavecqmadapter method)": [[4, "quantagonia.qubo.adapters.DWaveCQMAdapter.convertLinearConstraints"]], "convertlinearconstraints() (quantagonia.qubo.adapters.qiskitqpadapter method)": [[4, "quantagonia.qubo.adapters.QiskitQPAdapter.convertLinearConstraints"]], "convertobjective() (quantagonia.qubo.adapters.dwavecqmadapter method)": [[4, "quantagonia.qubo.adapters.DWaveCQMAdapter.convertObjective"]], "convertobjective() (quantagonia.qubo.adapters.qiskitqpadapter method)": [[4, "quantagonia.qubo.adapters.QiskitQPAdapter.convertObjective"]], "eval() (quantagonia.qubo.model.qubomodel method)": [[4, "quantagonia.qubo.model.QuboModel.eval"]], "fromip() (quantagonia.qubo.ip2qubo.ip2qubo method)": [[4, "quantagonia.qubo.ip2qubo.IP2Qubo.fromIP"]], "getnnzuppertriangle() (quantagonia.qubo.model.qubomodel method)": [[4, "quantagonia.qubo.model.QuboModel.getNNZUpperTriangle"]], "getnnzfullmatrix() (quantagonia.qubo.model.qubomodel method)": [[4, "quantagonia.qubo.model.QuboModel.getNnzFullMatrix"]], "getsolver() (quantagonia.pulp.qpulp_adapter.qpulpadapter class method)": [[4, "quantagonia.pulp.qpulp_adapter.QPuLPAdapter.getSolver"]], "hsolver_type (quantagonia.qubo.ip2qubo.automaticpenaltyscalingipviaqubosolver attribute)": [[4, "quantagonia.qubo.ip2qubo.AutomaticPenaltyScalingIPviaQUBOSolver.hsolver_type"]], "https_client (quantagonia.cloud.cloud_runner.cloudrunner attribute)": [[4, "quantagonia.cloud.cloud_runner.CloudRunner.https_client"]], "initial_penalty (quantagonia.qubo.ip2qubo.automaticpenaltyscalingipviaqubosolver attribute)": [[4, "quantagonia.qubo.ip2qubo.AutomaticPenaltyScalingIPviaQUBOSolver.initial_penalty"]], "interrupt_job() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[4, "quantagonia.cloud.cloud_runner.CloudRunner.interrupt_job"]], "interrupt_job_async() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[4, "quantagonia.cloud.cloud_runner.CloudRunner.interrupt_job_async"]], "ip2qubo (quantagonia.qubo.ip2qubo.ipviaqubosolver attribute)": [[4, "quantagonia.qubo.ip2qubo.IPviaQUBOSolver.ip2qubo"]], "isvalid() (quantagonia.qubo.model.qubomodel method)": [[4, "quantagonia.qubo.model.QuboModel.isValid"]], "iter (quantagonia.qubo.ip2qubo.ipviaqubosolver attribute)": [[4, "quantagonia.qubo.ip2qubo.IPviaQUBOSolver.iter"]], "module": [[4, "module-quantagonia.qubo.adapters"], [4, "module-quantagonia.spec_builder"]], "objective (quantagonia.qubo.ip2qubo.ip2qubo attribute)": [[4, "quantagonia.qubo.ip2qubo.IP2Qubo.objective"]], "quantagonia.qubo.adapters": [[4, "module-quantagonia.qubo.adapters"]], "quantagonia.spec_builder": [[4, "module-quantagonia.spec_builder"]], "readqubo() (quantagonia.qubo.model.qubomodel class method)": [[4, "quantagonia.qubo.model.QuboModel.readQUBO"]], "reportsolution() (quantagonia.qubo.ip2qubo.ipviaqubosolver method)": [[4, "quantagonia.qubo.ip2qubo.IPviaQUBOSolver.reportSolution"]], "root_node_only() (quantagonia.spec_builder.qubospecbuilder method)": [[4, "quantagonia.spec_builder.QUBOSpecBuilder.root_node_only"]], "sense (quantagonia.qubo.ip2qubo.ip2qubo attribute)": [[4, "quantagonia.qubo.ip2qubo.IP2Qubo.sense"]], "sense (quantagonia.qubo.model.qubomodel property)": [[4, "quantagonia.qubo.model.QuboModel.sense"]], "set_absolute_gap() (quantagonia.spec_builder.qubospecbuilder method)": [[4, "quantagonia.spec_builder.QUBOSpecBuilder.set_absolute_gap"]], "set_decomposition() (quantagonia.spec_builder.qubospecbuilder method)": [[4, "quantagonia.spec_builder.QUBOSpecBuilder.set_decomposition"]], "set_enumeration() (quantagonia.spec_builder.qubospecbuilder method)": [[4, "quantagonia.spec_builder.QUBOSpecBuilder.set_enumeration"]], "set_heuristics() (quantagonia.spec_builder.mipspecbuilder method)": [[4, "quantagonia.spec_builder.MIPSpecBuilder.set_heuristics"]], "set_max_num_nodes() (quantagonia.spec_builder.qubospecbuilder method)": [[4, "quantagonia.spec_builder.QUBOSpecBuilder.set_max_num_nodes"]], "set_node_presolve() (quantagonia.spec_builder.qubospecbuilder method)": [[4, "quantagonia.spec_builder.QUBOSpecBuilder.set_node_presolve"]], "set_objective_cutoff() (quantagonia.spec_builder.qubospecbuilder method)": [[4, "quantagonia.spec_builder.QUBOSpecBuilder.set_objective_cutoff"]], "set_presolve() (quantagonia.spec_builder.qubospecbuilder method)": [[4, "quantagonia.spec_builder.QUBOSpecBuilder.set_presolve"]], "set_relative_gap() (quantagonia.spec_builder.qubospecbuilder method)": [[4, "quantagonia.spec_builder.QUBOSpecBuilder.set_relative_gap"]], "solve() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[4, "quantagonia.cloud.cloud_runner.CloudRunner.solve"]], "solve() (quantagonia.qubo.model.qubomodel method)": [[4, "quantagonia.qubo.model.QuboModel.solve"]], "solveasync() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[4, "quantagonia.cloud.cloud_runner.CloudRunner.solveAsync"]], "solveasync() (quantagonia.qubo.model.qubomodel method)": [[4, "quantagonia.qubo.model.QuboModel.solveAsync"]], "solvebatched() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[4, "quantagonia.cloud.cloud_runner.CloudRunner.solveBatched"]], "solvebatchedasync() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[4, "quantagonia.cloud.cloud_runner.CloudRunner.solveBatchedAsync"]], "solveip() (quantagonia.qubo.ip2qubo.ipviaqubosolver method)": [[4, "quantagonia.qubo.ip2qubo.IPviaQUBOSolver.solveIP"]], "toqubo() (quantagonia.qubo.ip2qubo.ip2qubo method)": [[4, "quantagonia.qubo.ip2qubo.IP2Qubo.toQUBO"]], "variable() (quantagonia.qubo.model.qubomodel method)": [[4, "quantagonia.qubo.model.QuboModel.variable"]], "vars (quantagonia.qubo.ip2qubo.ip2qubo attribute)": [[4, "quantagonia.qubo.ip2qubo.IP2Qubo.vars"]], "verbose (quantagonia.qubo.ip2qubo.ip2qubo attribute)": [[4, "quantagonia.qubo.ip2qubo.IP2Qubo.verbose"]], "verbose (quantagonia.qubo.ip2qubo.ipviaqubosolver attribute)": [[4, "quantagonia.qubo.ip2qubo.IPviaQUBOSolver.verbose"]], "waitforjob() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[4, "quantagonia.cloud.cloud_runner.CloudRunner.waitForJob"]], "waitforjobasync() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[4, "quantagonia.cloud.cloud_runner.CloudRunner.waitForJobAsync"]], "writequbo() (quantagonia.qubo.model.qubomodel method)": [[4, "quantagonia.qubo.model.QuboModel.writeQUBO"]]}})