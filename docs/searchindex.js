Search.setIndex({"docnames": ["index", "qubo_format", "ref", "release_notes", "tutorials/IP2Qubo", "tutorials/converter", "tutorials/index", "tutorials/model"], "filenames": ["index.rst", "qubo_format.rst", "ref.rst", "release_notes.rst", "tutorials/IP2Qubo.rst", "tutorials/converter.rst", "tutorials/index.rst", "tutorials/model.rst"], "titles": ["Welcome to the documentation of Quantagonia\u2019s API client!", "Quantagonia QUBO format", "API Reference", "Release Notes", "Solving IP Problems and Conversion to QUBO", "Converting from Ocean and Qiskit", "Tutorials", "Modeling and Solving QUBO Problems"], "terms": {"allow": [0, 2], "you": [0, 2, 6], "solv": [0, 1, 3, 6], "optim": [0, 1, 2, 4, 6, 7], "problem": [0, 1, 2, 5, 6], "type": [0, 2], "qubo": [0, 3, 5, 6], "mip": [0, 2, 6, 7], "us": [0, 1, 2, 4, 5, 6, 7], "cloud": [0, 2, 4, 7], "text": 0, "min": 0, "max": 0, "quad": [0, 1], "x": [0, 1, 5], "top": 0, "q": [0, 1], "t": [0, 4, 7], "0": [0, 1, 2, 3, 4, 5, 7], "1": [0, 1, 2, 4, 5, 6, 7], "m": 0, "symmetr": [0, 1], "c": [0, 1, 7], "a_": 0, "le": [0, 1], "b_": 0, "ge": 0, "eq": 0, "x_i": 0, "mathbb": [0, 1], "z": 0, "foral": 0, "i": [0, 1, 2, 3, 4, 5, 6, 7], "subset": 0, "dot": 0, "n": [0, 1, 7], "l": 0, "u": 0, "addition": [0, 3], "can": [0, 1, 2, 4, 7], "model": [0, 1, 4, 6], "import": [0, 2, 4, 5, 7], "creat": [0, 2, 5, 7], "d": [0, 3, 5], "wave": [0, 3, 5], "ocean": [0, 6, 7], "pyqubo": 0, "qiskit": [0, 6, 7], "convert": [0, 2, 4, 6, 7], "pulp": [0, 2, 4], "ip": [0, 6, 7], "simpli": [0, 6, 7], "tutori": [0, 4], "convers": [0, 5, 6, 7], "from": [0, 1, 2, 3, 4, 6], "refer": 0, "solver": [0, 1, 3, 4, 6, 7], "option": [0, 4, 7], "adapt": 0, "format": [0, 2, 6, 7], "descript": 0, "file": [0, 2, 4], "syntax": 0, "releas": [0, 7], "note": [0, 2, 4, 7], "The": [0, 1, 2, 3, 4, 7], "avail": [0, 6], "via": [0, 3, 4, 5], "pypi": 0, "python": 0, "3": [0, 1, 2, 7], "8": 0, "requir": [0, 6, 7], "run": [0, 2], "follow": [0, 1], "packag": [0, 7], "pip": 0, "ar": [0, 2, 4, 6, 7], "For": [0, 2, 4], "your": [0, 4, 5, 6, 7], "own": [0, 4, 6], "kei": [0, 2, 4, 5, 7], "pleas": 0, "contact": 0, "support": [0, 2, 3, 4], "com": 0, "thi": [0, 1, 2, 3, 4, 5, 6, 7], "simpl": 0, "submit": [0, 2, 4], "cloud_runn": [0, 2, 7], "cloudrunn": [0, 2, 7], "spec_build": [0, 2, 7], "qubospecbuild": [0, 2, 3, 7], "enum": [0, 2, 4], "hybridsolveroptsens": [0, 2, 7], "api_kei": [0, 2, 4, 5, 7], "setup": [0, 7], "qubomodel": [0, 2, 5, 7], "variabl": [0, 1, 2, 4, 5, 7], "x0": [0, 7], "addvari": [0, 2, 7], "x_0": [0, 4, 7], "initi": [0, 2, 4, 7], "x1": [0, 7], "x_1": [0, 4, 7], "x2": [0, 7], "x_2": [0, 1, 4, 7], "x3": [0, 7], "x_3": [0, 4, 7], "x4": [0, 7], "x_4": [0, 4, 7], "build": [0, 2, 7], "object": [0, 2, 3, 4, 5, 7], "2": [0, 1, 2, 4, 5, 7], "set": [0, 1, 2, 4, 5, 6, 7], "sens": [0, 1, 2, 5, 7], "minim": [0, 1, 2, 5, 7], "print": [0, 2, 4, 5, 7], "eval": [0, 2, 7], "runner": [0, 2, 7], "load": 0, "default": [0, 2, 3, 4, 7], "spec": [0, 2, 7], "re": [0, 6, 7], "getd": [0, 2, 7], "runtim": [0, 3, 7], "time": [0, 1, 2, 7], "statu": [0, 2, 7], "sol_statu": [0, 2, 7], "document": [1, 2], "describ": [1, 4], "form": 1, "tqx": 1, "where": [1, 7], "sought": 1, "solut": [1, 2, 3, 4, 7], "vector": 1, "r": 1, "matrix": [1, 2], "usual": [1, 7], "end": [1, 7], "should": [1, 2], "have": [1, 2], "header": 1, "all": [1, 2, 4, 7], "line": 1, "separ": 1, "space": [1, 2], "first": [1, 7], "string": [1, 2, 3], "which": [1, 2, 4, 7], "maxim": [1, 2, 7], "second": [1, 2, 7], "need": [1, 2], "singl": [1, 2, 4], "integ": [1, 2, 4], "num_problem": 1, "number": [1, 2, 4, 5], "specifi": [1, 2, 4], "matric": 1, "each": [1, 2, 4, 5], "principl": 1, "view": 1, "when": [1, 2], "more": [1, 2, 4], "than": [1, 2], "present": 1, "accumul": 1, "sum": [1, 5], "them": [1, 2, 4], "up": 1, "report": 1, "structur": 1, "recurs": 1, "new": [1, 2, 6], "we": [1, 2, 6], "one": [1, 2, 5, 7], "float": [1, 2, 4], "penalti": [1, 2, 4, 5], "offset": 1, "constant": [1, 2], "energi": 1, "two": [1, 4], "nnz": 1, "dimens": 1, "row": 1, "column": 1, "non": [1, 2, 7], "zero": [1, 7], "entri": [1, 2], "upper": [1, 2], "triangl": [1, 2], "written": 1, "j": [1, 5], "q_": 1, "ij": 1, "valu": [1, 2, 3, 4, 7], "posit": 1, "becaus": [1, 2], "onli": [1, 2, 3], "diagon": 1, "triangular": 1, "automat": [1, 2, 4], "make": [1, 2, 4], "formal": 1, "mean": 1, "fix": [1, 2, 7], "e": [1, 2, 3], "whose": 1, "assign": [1, 2, 7], "ahead": 1, "f": [1, 2, 5, 7], "ix": [1, 7], "val": [1, 7], "": [1, 2, 4, 7], "index": 1, "either": [1, 2, 4], "offest": 1, "6": [1, 2, 7], "4": [1, 2, 4, 6], "5": [1, 4], "repeat": 1, "abov": 1, "here": [1, 7], "same": [1, 2, 7], "without": [1, 2], "comment": 1, "correct": 1, "If": [1, 2, 6], "take": [1, 2, 4], "would": 1, "begin": 1, "bmatrix": 1, "class": [2, 4, 5], "quantagonia": [2, 4, 5, 6, 7], "A": [2, 7], "repres": 2, "quadrat": [2, 4, 5], "unconstrain": [2, 4], "binari": [2, 4, 5], "instanc": [2, 4, 5], "method": [2, 3], "name": [2, 4, 5], "str": 2, "none": 2, "disable_warn": 2, "fals": 2, "add": 2, "paramet": 2, "ani": 2, "bool": 2, "true": [2, 4], "disabl": 2, "warn": 2, "messag": 2, "displai": 2, "alreadi": 2, "return": [2, 3, 4, 5, 7], "qubovari": 2, "wa": 2, "ad": 2, "rais": 2, "function": [2, 4, 5, 7], "current": 2, "after": [2, 7], "provid": [2, 6], "getnnzuppertriangl": 2, "get": 2, "nonzero": 2, "correspond": 2, "term": 2, "exclud": 2, "shift": 2, "int": 2, "getnnzfullmatrix": 2, "comput": 2, "full": 2, "demand": 2, "isvalid": 2, "check": [2, 6], "thei": [2, 4], "been": 2, "reduc": 2, "right": 2, "wai": [2, 4, 7], "indic": 2, "whether": [2, 6], "condit": 2, "classmethod": 2, "readqubo": [2, 7], "path": [2, 7], "read": [2, 4], "contain": [2, 7], "properti": 2, "argument": [2, 4], "pass": [2, 7], "member": 2, "an": [2, 3, 4, 5, 6, 7], "runtimeerror": 2, "valid": 2, "dict": 2, "dictionari": [2, 4, 7], "list": 2, "result": [2, 4, 7], "It": [2, 3, 4, 5, 7], "solution_fil": [2, 7], "solver_log": [2, 7], "bound": [2, 3, 7], "absolute_gap": 2, "relative_gap": 2, "iter": [2, 4, 7], "node": [2, 7], "nodes_per_sec": 2, "best_nod": 2, "best_tim": 2, "num_quantum_solut": 2, "solver_mix": 2, "async": 2, "solveasync": 2, "asynchron": 2, "retriev": 2, "keyerror": 2, "exist": 2, "writequbo": [2, 7], "write": 2, "destin": 2, "except": 2, "filenotfounderror": 2, "cannot": 2, "found": [2, 7], "permissionerror": 2, "program": [2, 4], "doe": [2, 5], "suffici": 2, "permiss": 2, "access": 2, "typeerror": 2, "server": 2, "hybridsolverserv": 2, "prod": 2, "suppress_log": 2, "subclass": 2, "authent": 2, "hybrid": 2, "servic": 2, "product": 2, "boolean": 2, "suppress": 2, "log": [2, 3, 7], "output": 2, "https_client": 2, "specshttpsclient": 2, "request": 2, "interrupt_job": 2, "jobid": 2, "modul": [2, 7], "uuid": 2, "usr": 2, "lib": 2, "python3": 2, "9": [2, 4, 5], "py": 2, "send": 2, "interrupt": 2, "signal": 2, "stop": 2, "execut": [2, 7], "job": [2, 3, 7], "respons": 2, "interrupt_job_async": 2, "problem_fil": 2, "kwarg": 2, "keyword": 2, "submit_callback": 2, "custom": 2, "callback": 2, "call": 2, "poll_frequ": 2, "frequenc": 2, "poll": 2, "new_incumbent_callback": 2, "incumb": 2, "batch": 2, "item": [2, 4, 5, 7], "timeout": 2, "maximum": [2, 4, 7], "amount": 2, "wait": 2, "finish": [2, 7], "befor": 2, "out": [2, 4, 6], "14400": 2, "asynchon": 2, "solvebatch": [2, 7], "solvebatchedasync": 2, "waitforjob": 2, "batch_siz": [2, 7], "jobstatu": 2, "identifi": 2, "until": 2, "reach": [2, 4], "final": [2, 4, 7], "exceed": 2, "updat": 2, "solverlog": 2, "size": 2, "ha": [2, 7], "termin": 2, "waitforjobasync": 2, "sent": 2, "alongsid": 2, "variou": [2, 7], "mipspecbuild": [2, 7], "facilit": 2, "process": [2, 4], "hold": [2, 7], "while": [2, 5, 7], "also": [2, 6, 7], "modifi": 2, "These": 2, "json": 2, "version": [2, 3], "1e": 2, "09": 2, "time_limit": 2, "3600": 2, "epsilon": 2, "seed": 2, "36848232890347": 2, "presolv": [2, 3, 7], "enabl": [2, 3], "coeff_strengthen": 2, "decompos": 2, "maxit": 2, "100000": 2, "node_presolv": 2, "node_impl": 2, "branching_rul": 2, "max_contribut": 2, "branching_scor": 2, "enumer": 2, "enumeration_algorithm": 2, "cpu_grai": 2, "enumeration_threshold": 2, "16": 2, "primal_solv": 2, "no_solv": 2, "dual_solv": 2, "frank_wolf": 2, "500000": 2, "max_dual_gap": 2, "02": 2, "max_rel_dual_gap": 2, "05": 2, "smasher_step": 2, "smasher_ep": 2, "dual_root_node_sdp": 2, "dual_fix": 2, "dual_impl": 2, "convexif": 2, "sdp_shift": 2, "variant": 2, "project": 2, "specbuild": 2, "abstract": 2, "builder": 2, "base": 2, "set_opt": 2, "set_time_limit": 2, "limit": [2, 4, 5], "interupt": 2, "given": [2, 7], "best": 2, "along": 2, "gap": [2, 7], "tell": 2, "how": 2, "much": 2, "potenti": [2, 6], "could": 2, "ordinari": 2, "quantum": [2, 3, 4, 6], "anneal": [2, 4], "know": 2, "far": 2, "might": 2, "awai": 2, "exampl": [2, 4, 5, 7], "10": [2, 4, 6], "mix": [2, 7], "specif": [2, 6, 7], "extend": 2, "problem_typ": 2, "set_heurist": 2, "heurist": [2, 3], "mip_heuristic_effort": 2, "rang": [2, 5, 6, 7], "control": 2, "percentag": 2, "valueerror": 2, "within": 2, "spec_path": 2, "home": 2, "jenkin": 2, "workspac": 2, "client": 2, "gitlab_dir": 2, "default_spec": 2, "root_node_onli": 2, "branch": [2, 3], "explor": [2, 6], "root": 2, "mimick": 2, "behavior": 2, "qualiti": 2, "assess": 2, "proof": 2, "global": 2, "compar": 2, "other": [2, 6], "sure": 2, "our": 2, "still": 2, "case": 2, "num_nod": 2, "set_max_num_nod": 2, "set_absolute_gap": 2, "abs_gap": 2, "absolut": [2, 7], "normal": 2, "onc": [2, 4, 7], "toler": 2, "differ": [2, 4, 7], "between": 2, "f\u02c9": 2, "henc": 2, "increas": 2, "continu": 2, "search": [2, 6], "set_decomposit": 2, "decomposit": 2, "set_enumer": 2, "dure": 2, "mani": [2, 7], "smaller": [2, 7], "sub": 2, "small": 2, "enough": 2, "explicitli": 2, "done": [2, 3, 7], "extrem": 2, "fast": 2, "mai": 2, "turn": 2, "off": 2, "max_num_nod": 2, "greater": 2, "equal": 2, "set_node_presolv": 2, "similar": 2, "perform": 2, "some": [2, 7], "routin": 2, "deriv": 2, "param": 2, "set_objective_cutoff": 2, "cutoff_valu": 2, "cutoff": 2, "set_presolv": 2, "set_relative_gap": 2, "rel_gap": 2, "rel": [2, 7], "01": [2, 7], "defin": 2, "ast": 2, "bar": 2, "improv": 2, "known": 2, "dwavebqmadapt": 2, "dimod": [2, 5], "binaryquadraticmodel": 2, "bqm": 2, "so": [2, 7], "obtain": 2, "dwavecqmadapt": [2, 5], "1000": 2, "constrainedquadraticmodel": [2, 5], "checkcqmsupport": 2, "cqm": [2, 5], "input": 2, "unsupport": 2, "constraint": [2, 4, 5], "linear": [2, 5], "convertlinearconstraint": 2, "convertobject": 2, "qiskitqpadapt": [2, 5], "ibm": 2, "qiskit_optim": 2, "quadraticprogram": [2, 5], "__init__": 2, "1e3": 2, "checkqpsupport": 2, "qp": [2, 5], "pyquboadapt": 2, "alwai": 2, "assum": 2, "pqm": 2, "qpulp_adapt": [2, 4], "qpulpadapt": [2, 4], "languag": 2, "getsolv": [2, 4], "connect": 2, "hybridsolverconnectiontyp": [2, 4], "spec_dict": 2, "keep_fil": 2, "recommend": [2, 6], "keep": 2, "gener": 2, "ip2qubo": 2, "verbos": [2, 4], "scaleequalityconstraint": 2, "scaleobject": 2, "intermedi": 2, "addit": [2, 7], "scale": [2, 4], "var": [2, 7], "pair": 2, "quboexpress": 2, "fromip": 2, "mip_format": 2, "mipsourceformat": 2, "toqubo": 2, "transform": 2, "weight": [2, 4, 5], "union": 2, "factor": 2, "adjust": [2, 4], "accept": [2, 7], "appli": [2, 4], "altern": [2, 4, 7], "respect": 2, "well": 2, "individu": [2, 4], "ipviaqubosolv": 2, "inform": 2, "about": 2, "state": 2, "reportsolut": 2, "solveip": [2, 4], "lpproblem": [2, 4], "automaticpenaltyscalingipviaqubosolv": [2, 4], "initial_penalti": [2, 4], "hsolver_typ": 2, "max_it": [2, 4], "100": [2, 4], "find": 2, "feasibl": 2, "oneshotipviaqubosolv": [2, 4], "shot": [2, 4], "55": 3, "instead": [3, 7], "now": 3, "statist": [3, 7], "like": [3, 6], "etc": 3, "54": [3, 4], "score": 3, "decis": 3, "53": 3, "coeffici": 3, "tighten": 3, "part": 3, "longer": [3, 7], "remov": 3, "possibl": [3, 4, 5, 7], "g": 3, "simul": 3, "add_quantum_heurist": 3, "even": 4, "though": 4, "directli": [4, 7], "effici": 4, "usag": 4, "knapsack": 4, "api": [4, 5, 7], "prob": 4, "lpmaxim": 4, "lpvariabl": 4, "lpbinari": 4, "x_5": 4, "x_6": 4, "x_7": 4, "x_8": 4, "36": 4, "43": 4, "90": 4, "45": 4, "30": [4, 7], "56": 4, "67": 4, "95": 4, "98": 4, "obj": 4, "38": 4, "24": 4, "40": 4, "25": 4, "37": 4, "59": 4, "150": 4, "capac": [4, 5], "offer": 4, "q_solver": 4, "v": 4, "varvalu": 4, "optimis": 4, "screen": 4, "mip_obj": 4, "back": [4, 7], "featur": 4, "hardwar": [4, 7], "qaoa": 4, "algorithm": 4, "explain": 4, "detail": 4, "chapter": 4, "bridg": [4, 6], "analyt": [4, 6], "formul": [4, 6], "lectur": 4, "There": [4, 7], "enforc": 4, "as_qubo": 4, "give": 4, "approach": [4, 7], "sequenti": [4, 7], "With": 4, "inflat": 4, "met": 4, "decreas": 4, "slightli": 4, "Or": 4, "metric": 4, "try": 4, "error": 4, "implement": [4, 5], "Then": 4, "start": 4, "qubo_obj": 4, "footnot": [4, 6], "glover": [4, 6], "fred": [4, 6], "kochenberg": [4, 6], "gari": [4, 6], "du": [4, 6], "yu": [4, 6], "2019": [4, 6], "4or": [4, 6], "17": [4, 6], "335": [4, 6], "371": [4, 6], "doi": [4, 6], "1007": [4, 6], "s10288": [4, 6], "019": [4, 6], "00424": [4, 6], "y": [4, 5, 6], "tayur": 4, "sridhar": 4, "venturelli": 4, "david": 4, "bernal": 4, "2020": 4, "47": 4, "779": 4, "carnegi": 4, "mellon": 4, "univers": 4, "pittsburgh": 4, "pennsylvania": 4, "usa": 4, "howev": 5, "pack": 5, "def": 5, "build_ocean_cqm": 5, "7": 5, "y_j": 5, "bin": 5, "x_i_j": 5, "y_": 5, "len": [5, 7], "x_": 5, "_": 5, "set_object": 5, "ensur": 5, "exactli": 5, "add_constraint": 5, "label": 5, "item_placing_": 5, "total": 5, "exce": 5, "capacity_bin_": 5, "__name__": 5, "__main__": 5, "qubo_convert": 5, "1e2": 5, "In": [5, 6, 7], "build_qiskit_qp": 5, "binary_var": 5, "linear_constraint": 5, "rh": 5, "lhs_x": 5, "lhs_y": 5, "prettyprint": 5, "welcom": 6, "seri": 6, "cover": 6, "topic": 6, "relat": 6, "includ": 6, "framework": 6, "dive": 6, "tailor": 6, "look": 6, "complex": 6, "want": 6, "research": 6, "valuabl": 6, "tool": 6, "achiev": 6, "goal": 6, "world": 6, "introduct": 6, "sever": 7, "hand": 7, "evalu": 7, "see": 7, "edit": 7, "To": 7, "o": 7, "remot": 7, "both": 7, "mp": 7, "step": 7, "input_file_path": 7, "join": 7, "dirnam": 7, "abspath": 7, "__file__": 7, "example3": 7, "res_dict": 7, "idx": 7, "n1": 7, "success": 7, "nquantagonia": 7, "hybridsolv": 7, "ncopyright": 7, "2023": 7, "gmbh": 7, "nhybridsolv": 7, "integr": 7, "open": 7, "sourc": 7, "nfloat": 7, "point": 7, "datatyp": 7, "doubl": 7, "nread": 7, "num": 7, "noptim": 7, "nbranch": 7, "rule": 7, "contribut": 7, "nrun": 7, "cpu": 7, "nstart": 7, "npresolv": 7, "00": 7, "implic": 7, "nthe": 7, "nsolver": 7, "wall": 7, "500000e": 7, "000000e": 7, "0000e": 7, "dual": 7, "clip": 7, "oscil": 7, "multipl": 7, "advantag": 7, "queu": 7, "drawback": 7, "subsequ": 7, "therefor": 7, "especi": 7, "larger": 7, "mip_path0": 7, "mip_path1": 7, "example2": 7, "qubo_path": 7, "mip_spec": 7, "qubo_spec": 7, "arrai": 7, "order": 7, "match": 7}, "objects": {"quantagonia.cloud.cloud_runner": [[2, 0, 1, "", "CloudRunner"]], "quantagonia.cloud.cloud_runner.CloudRunner": [[2, 1, 1, "", "https_client"], [2, 2, 1, "", "interrupt_job"], [2, 2, 1, "", "interrupt_job_async"], [2, 2, 1, "", "solve"], [2, 2, 1, "", "solveAsync"], [2, 2, 1, "", "solveBatched"], [2, 2, 1, "", "solveBatchedAsync"], [2, 2, 1, "", "waitForJob"], [2, 2, 1, "", "waitForJobAsync"]], "quantagonia.enums": [[2, 0, 1, "", "HybridSolverOptSenses"]], "quantagonia.enums.HybridSolverOptSenses": [[2, 1, 1, "", "MAXIMIZE"], [2, 1, 1, "", "MINIMIZE"]], "quantagonia.pulp.qpulp_adapter": [[2, 0, 1, "", "QPuLPAdapter"]], "quantagonia.pulp.qpulp_adapter.QPuLPAdapter": [[2, 2, 1, "", "getSolver"]], "quantagonia.qubo": [[2, 3, 0, "-", "adapters"]], "quantagonia.qubo.adapters": [[2, 0, 1, "", "DWaveBQMAdapter"], [2, 0, 1, "", "DWaveCQMAdapter"], [2, 0, 1, "", "PyQUBOAdapter"], [2, 0, 1, "", "QiskitQPAdapter"]], "quantagonia.qubo.adapters.DWaveBQMAdapter": [[2, 2, 1, "", "convert"]], "quantagonia.qubo.adapters.DWaveCQMAdapter": [[2, 2, 1, "", "checkCQMSupported"], [2, 2, 1, "", "convert"], [2, 2, 1, "", "convertLinearConstraints"], [2, 2, 1, "", "convertObjective"]], "quantagonia.qubo.adapters.PyQUBOAdapter": [[2, 2, 1, "", "convert"]], "quantagonia.qubo.adapters.QiskitQPAdapter": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "checkQPSupported"], [2, 2, 1, "", "convert"], [2, 2, 1, "", "convertLinearConstraints"], [2, 2, 1, "", "convertObjective"]], "quantagonia.qubo.ip2qubo": [[2, 0, 1, "", "AutomaticPenaltyScalingIPviaQUBOSolver"], [2, 0, 1, "", "IP2Qubo"], [2, 0, 1, "", "IPviaQUBOSolver"], [2, 0, 1, "", "OneShotIPviaQUBOSolver"]], "quantagonia.qubo.ip2qubo.AutomaticPenaltyScalingIPviaQUBOSolver": [[2, 1, 1, "", "api_key"], [2, 1, 1, "", "hsolver_type"], [2, 1, 1, "", "initial_penalty"]], "quantagonia.qubo.ip2qubo.IP2Qubo": [[2, 1, 1, "", "constraints"], [2, 2, 1, "", "fromIP"], [2, 1, 1, "", "objective"], [2, 1, 1, "", "sense"], [2, 2, 1, "", "toQUBO"], [2, 1, 1, "", "vars"], [2, 1, 1, "", "verbose"]], "quantagonia.qubo.ip2qubo.IPviaQUBOSolver": [[2, 1, 1, "", "ip2qubo"], [2, 1, 1, "", "iter"], [2, 2, 1, "", "reportSolution"], [2, 2, 1, "", "solveIP"], [2, 1, 1, "", "verbose"]], "quantagonia.qubo.model": [[2, 0, 1, "", "QuboModel"]], "quantagonia.qubo.model.QuboModel": [[2, 2, 1, "", "addVariable"], [2, 2, 1, "", "eval"], [2, 2, 1, "", "getNNZUpperTriangle"], [2, 2, 1, "", "getNnzFullMatrix"], [2, 2, 1, "", "isValid"], [2, 2, 1, "", "readQUBO"], [2, 4, 1, "", "sense"], [2, 2, 1, "", "solve"], [2, 2, 1, "", "solveAsync"], [2, 2, 1, "", "variable"], [2, 2, 1, "", "writeQUBO"]], "quantagonia.spec_builder": [[2, 0, 1, "", "MIPSpecBuilder"], [2, 0, 1, "", "QUBOSpecBuilder"], [2, 0, 1, "", "SpecBuilder"]], "quantagonia.spec_builder.MIPSpecBuilder": [[2, 2, 1, "", "set_heuristics"]], "quantagonia.spec_builder.QUBOSpecBuilder": [[2, 2, 1, "", "root_node_only"], [2, 2, 1, "", "set_absolute_gap"], [2, 2, 1, "", "set_decomposition"], [2, 2, 1, "", "set_enumeration"], [2, 2, 1, "", "set_max_num_nodes"], [2, 2, 1, "", "set_node_presolve"], [2, 2, 1, "", "set_objective_cutoff"], [2, 2, 1, "", "set_presolve"], [2, 2, 1, "", "set_relative_gap"]], "quantagonia.spec_builder.SpecBuilder": [[2, 2, 1, "", "getd"], [2, 2, 1, "", "set_option"], [2, 2, 1, "", "set_time_limit"]]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:module", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "module", "Python module"], "4": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "document": 0, "quantagonia": [0, 1], "": 0, "api": [0, 2], "client": 0, "content": [0, 2, 6, 7], "instal": 0, "exampl": [0, 1], "qubo": [1, 2, 4, 7], "format": 1, "descript": 1, "file": [1, 7], "syntax": 1, "refer": 2, "tabl": [2, 7], "model": [2, 7], "solv": [2, 4, 7], "solver": 2, "option": 2, "adapt": 2, "d": 2, "wave": 2, "pyqubo": 2, "qiskit": [2, 5], "ip": [2, 4], "convers": [2, 4], "releas": 3, "note": 3, "problem": [4, 7], "creat": 4, "mip": 4, "convert": 5, "from": [5, 7], "ocean": 5, "tutori": 6, "load": 7, "store": 7, "submit": 7, "instanc": 7}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to the documentation of Quantagonia\u2019s API client!": [[0, "welcome-to-the-documentation-of-quantagonia-s-api-client"]], "Content:": [[0, null]], "Installation": [[0, "installation"]], "Example": [[0, "example"], [1, "example"]], "Quantagonia QUBO format": [[1, "quantagonia-qubo-format"]], "Description": [[1, "description"]], "File syntax": [[1, "file-syntax"]], "API Reference": [[2, "api-reference"]], "Table of Contents": [[2, "table-of-contents"], [7, "table-of-contents"]], "Modeling QUBOs": [[2, "modeling-qubos"]], "Solving": [[2, "solving"]], "Solver Options": [[2, "solver-options"]], "Adapters for D-Wave, PyQUBO, Qiskit": [[2, "adapters-for-d-wave-pyqubo-qiskit"]], "IP Solver and Conversion": [[2, "ip-solver-and-conversion"]], "Release Notes": [[3, "release-notes"]], "Solving IP Problems and Conversion to QUBO": [[4, "solving-ip-problems-and-conversion-to-qubo"]], "Creating a MIP": [[4, "creating-a-mip"]], "Solving MIP as QUBO": [[4, "solving-mip-as-qubo"]], "Converting from Ocean and Qiskit": [[5, "converting-from-ocean-and-qiskit"]], "Converting from Ocean": [[5, "converting-from-ocean"]], "Converting from Qiskit": [[5, "converting-from-qiskit"]], "Tutorials": [[6, "tutorials"]], "Contents:": [[6, null]], "Modeling and Solving QUBO Problems": [[7, "modeling-and-solving-qubo-problems"]], "Modeling a QUBO": [[7, "modeling-a-qubo"]], "Loading and Storing QUBOs from/as files": [[7, "loading-and-storing-qubos-from-as-files"]], "Submitting QUBOs for solving": [[7, "submitting-qubos-for-solving"]], "Submitting a modeled instance": [[7, "submitting-a-modeled-instance"]], "Submitting files": [[7, "submitting-files"]]}, "indexentries": {"automaticpenaltyscalingipviaqubosolver (class in quantagonia.qubo.ip2qubo)": [[2, "quantagonia.qubo.ip2qubo.AutomaticPenaltyScalingIPviaQUBOSolver"]], "cloudrunner (class in quantagonia.cloud.cloud_runner)": [[2, "quantagonia.cloud.cloud_runner.CloudRunner"]], "dwavebqmadapter (class in quantagonia.qubo.adapters)": [[2, "quantagonia.qubo.adapters.DWaveBQMAdapter"]], "dwavecqmadapter (class in quantagonia.qubo.adapters)": [[2, "quantagonia.qubo.adapters.DWaveCQMAdapter"]], "hybridsolveroptsenses (class in quantagonia.enums)": [[2, "quantagonia.enums.HybridSolverOptSenses"]], "ip2qubo (class in quantagonia.qubo.ip2qubo)": [[2, "quantagonia.qubo.ip2qubo.IP2Qubo"]], "ipviaqubosolver (class in quantagonia.qubo.ip2qubo)": [[2, "quantagonia.qubo.ip2qubo.IPviaQUBOSolver"]], "maximize (quantagonia.enums.hybridsolveroptsenses attribute)": [[2, "quantagonia.enums.HybridSolverOptSenses.MAXIMIZE"]], "minimize (quantagonia.enums.hybridsolveroptsenses attribute)": [[2, "quantagonia.enums.HybridSolverOptSenses.MINIMIZE"]], "mipspecbuilder (class in quantagonia.spec_builder)": [[2, "quantagonia.spec_builder.MIPSpecBuilder"]], "oneshotipviaqubosolver (class in quantagonia.qubo.ip2qubo)": [[2, "quantagonia.qubo.ip2qubo.OneShotIPviaQUBOSolver"]], "pyquboadapter (class in quantagonia.qubo.adapters)": [[2, "quantagonia.qubo.adapters.PyQUBOAdapter"]], "qpulpadapter (class in quantagonia.pulp.qpulp_adapter)": [[2, "quantagonia.pulp.qpulp_adapter.QPuLPAdapter"]], "qubospecbuilder (class in quantagonia.spec_builder)": [[2, "quantagonia.spec_builder.QUBOSpecBuilder"]], "qiskitqpadapter (class in quantagonia.qubo.adapters)": [[2, "quantagonia.qubo.adapters.QiskitQPAdapter"]], "qubomodel (class in quantagonia.qubo.model)": [[2, "quantagonia.qubo.model.QuboModel"]], "specbuilder (class in quantagonia.spec_builder)": [[2, "quantagonia.spec_builder.SpecBuilder"]], "__init__() (quantagonia.qubo.adapters.qiskitqpadapter method)": [[2, "quantagonia.qubo.adapters.QiskitQPAdapter.__init__"]], "addvariable() (quantagonia.qubo.model.qubomodel method)": [[2, "quantagonia.qubo.model.QuboModel.addVariable"]], "api_key (quantagonia.qubo.ip2qubo.automaticpenaltyscalingipviaqubosolver attribute)": [[2, "quantagonia.qubo.ip2qubo.AutomaticPenaltyScalingIPviaQUBOSolver.api_key"]], "checkcqmsupported() (quantagonia.qubo.adapters.dwavecqmadapter method)": [[2, "quantagonia.qubo.adapters.DWaveCQMAdapter.checkCQMSupported"]], "checkqpsupported() (quantagonia.qubo.adapters.qiskitqpadapter method)": [[2, "quantagonia.qubo.adapters.QiskitQPAdapter.checkQPSupported"]], "constraints (quantagonia.qubo.ip2qubo.ip2qubo attribute)": [[2, "quantagonia.qubo.ip2qubo.IP2Qubo.constraints"]], "convert() (quantagonia.qubo.adapters.dwavebqmadapter method)": [[2, "quantagonia.qubo.adapters.DWaveBQMAdapter.convert"]], "convert() (quantagonia.qubo.adapters.dwavecqmadapter method)": [[2, "quantagonia.qubo.adapters.DWaveCQMAdapter.convert"]], "convert() (quantagonia.qubo.adapters.pyquboadapter method)": [[2, "quantagonia.qubo.adapters.PyQUBOAdapter.convert"]], "convert() (quantagonia.qubo.adapters.qiskitqpadapter method)": [[2, "quantagonia.qubo.adapters.QiskitQPAdapter.convert"]], "convertlinearconstraints() (quantagonia.qubo.adapters.dwavecqmadapter method)": [[2, "quantagonia.qubo.adapters.DWaveCQMAdapter.convertLinearConstraints"]], "convertlinearconstraints() (quantagonia.qubo.adapters.qiskitqpadapter method)": [[2, "quantagonia.qubo.adapters.QiskitQPAdapter.convertLinearConstraints"]], "convertobjective() (quantagonia.qubo.adapters.dwavecqmadapter method)": [[2, "quantagonia.qubo.adapters.DWaveCQMAdapter.convertObjective"]], "convertobjective() (quantagonia.qubo.adapters.qiskitqpadapter method)": [[2, "quantagonia.qubo.adapters.QiskitQPAdapter.convertObjective"]], "eval() (quantagonia.qubo.model.qubomodel method)": [[2, "quantagonia.qubo.model.QuboModel.eval"]], "fromip() (quantagonia.qubo.ip2qubo.ip2qubo method)": [[2, "quantagonia.qubo.ip2qubo.IP2Qubo.fromIP"]], "getnnzuppertriangle() (quantagonia.qubo.model.qubomodel method)": [[2, "quantagonia.qubo.model.QuboModel.getNNZUpperTriangle"]], "getnnzfullmatrix() (quantagonia.qubo.model.qubomodel method)": [[2, "quantagonia.qubo.model.QuboModel.getNnzFullMatrix"]], "getsolver() (quantagonia.pulp.qpulp_adapter.qpulpadapter class method)": [[2, "quantagonia.pulp.qpulp_adapter.QPuLPAdapter.getSolver"]], "getd() (quantagonia.spec_builder.specbuilder method)": [[2, "quantagonia.spec_builder.SpecBuilder.getd"]], "hsolver_type (quantagonia.qubo.ip2qubo.automaticpenaltyscalingipviaqubosolver attribute)": [[2, "quantagonia.qubo.ip2qubo.AutomaticPenaltyScalingIPviaQUBOSolver.hsolver_type"]], "https_client (quantagonia.cloud.cloud_runner.cloudrunner attribute)": [[2, "quantagonia.cloud.cloud_runner.CloudRunner.https_client"]], "initial_penalty (quantagonia.qubo.ip2qubo.automaticpenaltyscalingipviaqubosolver attribute)": [[2, "quantagonia.qubo.ip2qubo.AutomaticPenaltyScalingIPviaQUBOSolver.initial_penalty"]], "interrupt_job() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[2, "quantagonia.cloud.cloud_runner.CloudRunner.interrupt_job"]], "interrupt_job_async() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[2, "quantagonia.cloud.cloud_runner.CloudRunner.interrupt_job_async"]], "ip2qubo (quantagonia.qubo.ip2qubo.ipviaqubosolver attribute)": [[2, "quantagonia.qubo.ip2qubo.IPviaQUBOSolver.ip2qubo"]], "isvalid() (quantagonia.qubo.model.qubomodel method)": [[2, "quantagonia.qubo.model.QuboModel.isValid"]], "iter (quantagonia.qubo.ip2qubo.ipviaqubosolver attribute)": [[2, "quantagonia.qubo.ip2qubo.IPviaQUBOSolver.iter"]], "module": [[2, "module-quantagonia.qubo.adapters"]], "objective (quantagonia.qubo.ip2qubo.ip2qubo attribute)": [[2, "quantagonia.qubo.ip2qubo.IP2Qubo.objective"]], "quantagonia.qubo.adapters": [[2, "module-quantagonia.qubo.adapters"]], "readqubo() (quantagonia.qubo.model.qubomodel class method)": [[2, "quantagonia.qubo.model.QuboModel.readQUBO"]], "reportsolution() (quantagonia.qubo.ip2qubo.ipviaqubosolver method)": [[2, "quantagonia.qubo.ip2qubo.IPviaQUBOSolver.reportSolution"]], "root_node_only() (quantagonia.spec_builder.qubospecbuilder method)": [[2, "quantagonia.spec_builder.QUBOSpecBuilder.root_node_only"]], "sense (quantagonia.qubo.ip2qubo.ip2qubo attribute)": [[2, "quantagonia.qubo.ip2qubo.IP2Qubo.sense"]], "sense (quantagonia.qubo.model.qubomodel property)": [[2, "quantagonia.qubo.model.QuboModel.sense"]], "set_absolute_gap() (quantagonia.spec_builder.qubospecbuilder method)": [[2, "quantagonia.spec_builder.QUBOSpecBuilder.set_absolute_gap"]], "set_decomposition() (quantagonia.spec_builder.qubospecbuilder method)": [[2, "quantagonia.spec_builder.QUBOSpecBuilder.set_decomposition"]], "set_enumeration() (quantagonia.spec_builder.qubospecbuilder method)": [[2, "quantagonia.spec_builder.QUBOSpecBuilder.set_enumeration"]], "set_heuristics() (quantagonia.spec_builder.mipspecbuilder method)": [[2, "quantagonia.spec_builder.MIPSpecBuilder.set_heuristics"]], "set_max_num_nodes() (quantagonia.spec_builder.qubospecbuilder method)": [[2, "quantagonia.spec_builder.QUBOSpecBuilder.set_max_num_nodes"]], "set_node_presolve() (quantagonia.spec_builder.qubospecbuilder method)": [[2, "quantagonia.spec_builder.QUBOSpecBuilder.set_node_presolve"]], "set_objective_cutoff() (quantagonia.spec_builder.qubospecbuilder method)": [[2, "quantagonia.spec_builder.QUBOSpecBuilder.set_objective_cutoff"]], "set_option() (quantagonia.spec_builder.specbuilder method)": [[2, "quantagonia.spec_builder.SpecBuilder.set_option"]], "set_presolve() (quantagonia.spec_builder.qubospecbuilder method)": [[2, "quantagonia.spec_builder.QUBOSpecBuilder.set_presolve"]], "set_relative_gap() (quantagonia.spec_builder.qubospecbuilder method)": [[2, "quantagonia.spec_builder.QUBOSpecBuilder.set_relative_gap"]], "set_time_limit() (quantagonia.spec_builder.specbuilder method)": [[2, "quantagonia.spec_builder.SpecBuilder.set_time_limit"]], "solve() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[2, "quantagonia.cloud.cloud_runner.CloudRunner.solve"]], "solve() (quantagonia.qubo.model.qubomodel method)": [[2, "quantagonia.qubo.model.QuboModel.solve"]], "solveasync() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[2, "quantagonia.cloud.cloud_runner.CloudRunner.solveAsync"]], "solveasync() (quantagonia.qubo.model.qubomodel method)": [[2, "quantagonia.qubo.model.QuboModel.solveAsync"]], "solvebatched() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[2, "quantagonia.cloud.cloud_runner.CloudRunner.solveBatched"]], "solvebatchedasync() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[2, "quantagonia.cloud.cloud_runner.CloudRunner.solveBatchedAsync"]], "solveip() (quantagonia.qubo.ip2qubo.ipviaqubosolver method)": [[2, "quantagonia.qubo.ip2qubo.IPviaQUBOSolver.solveIP"]], "toqubo() (quantagonia.qubo.ip2qubo.ip2qubo method)": [[2, "quantagonia.qubo.ip2qubo.IP2Qubo.toQUBO"]], "variable() (quantagonia.qubo.model.qubomodel method)": [[2, "quantagonia.qubo.model.QuboModel.variable"]], "vars (quantagonia.qubo.ip2qubo.ip2qubo attribute)": [[2, "quantagonia.qubo.ip2qubo.IP2Qubo.vars"]], "verbose (quantagonia.qubo.ip2qubo.ip2qubo attribute)": [[2, "quantagonia.qubo.ip2qubo.IP2Qubo.verbose"]], "verbose (quantagonia.qubo.ip2qubo.ipviaqubosolver attribute)": [[2, "quantagonia.qubo.ip2qubo.IPviaQUBOSolver.verbose"]], "waitforjob() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[2, "quantagonia.cloud.cloud_runner.CloudRunner.waitForJob"]], "waitforjobasync() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[2, "quantagonia.cloud.cloud_runner.CloudRunner.waitForJobAsync"]], "writequbo() (quantagonia.qubo.model.qubomodel method)": [[2, "quantagonia.qubo.model.QuboModel.writeQUBO"]]}})