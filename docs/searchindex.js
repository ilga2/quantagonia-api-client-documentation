Search.setIndex({"docnames": ["index", "ref", "release_notes", "tutorials/IP2Qubo", "tutorials/converter", "tutorials/index", "tutorials/model", "tutorials/qubo_format", "tutorials/specs"], "filenames": ["index.rst", "ref.rst", "release_notes.rst", "tutorials/IP2Qubo.rst", "tutorials/converter.rst", "tutorials/index.rst", "tutorials/model.rst", "tutorials/qubo_format.rst", "tutorials/specs.rst"], "titles": ["Welcome to the documentation of Quantagonia\u2019s API client!", "Reference", "Release Notes", "Solving IP and Conversion to QUBO", "Converting from Ocean and Qiskit", "Tutorials", "Creating and Solving QUBO Problems", "Quantagonia QUBO format", "QUBO Solver Specifications"], "terms": {"allow": [0, 1, 8], "you": [0, 5, 8], "creat": [0, 1, 4, 5], "qubo": [0, 2, 4, 5], "import": [0, 1, 3, 4, 6, 8], "d": [0, 2, 4], "wave": [0, 2, 4], "ocean": [0, 5, 6], "bqm": [0, 1], "cqm": [0, 1, 4], "pyqubo": 0, "qiskit": [0, 5, 6], "quadraticprogram": [0, 1, 4], "convert": [0, 1, 3, 5, 6], "pulp": [0, 1, 3], "ip": [0, 1, 5, 6], "problem": [0, 1, 3, 4, 5, 7, 8], "solv": [0, 2, 5, 7, 8], "submit": [0, 1, 3], "mip": [0, 1], "cloud": [0, 1, 3, 6], "onli": [0, 1, 2, 7, 8], "valid": [0, 1], "kei": [0, 1, 3, 4, 6], "tutori": 0, "format": [0, 1, 5, 6], "convers": [0, 1, 4, 5, 6], "from": [0, 1, 2, 3, 5, 7, 8], "solver": [0, 2, 3, 5, 6, 7], "specif": [0, 1, 5], "refer": 0, "model": [0, 3, 5, 7], "adapt": 0, "ip2qubo": 0, "releas": [0, 6], "note": [0, 1, 3, 6, 8], "The": [0, 1, 2, 3, 6, 7, 8], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8], "avail": [0, 5], "via": [0, 2, 4, 8], "pypi": 0, "python": 0, "3": [0, 6, 7], "8": 0, "requir": [0, 5, 6], "simpli": [0, 5, 6], "run": 0, "follow": [0, 7, 8], "packag": [0, 6], "pip": 0, "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8], "simpl": 0, "cloud_runn": [0, 1, 6], "cloudrunn": [0, 1, 6], "spec_build": [0, 1, 6, 8], "qubospecbuild": [0, 1, 2, 6, 8], "enum": [0, 1, 3], "hybridsolveroptsens": [0, 1, 6], "api_kei": [0, 1, 3, 4, 6], "your": [0, 3, 4, 5, 6], "setup": [0, 6], "qubomodel": [0, 1, 4, 6], "variabl": [0, 1, 3, 4, 6, 7, 8], "x0": [0, 6], "addvari": [0, 1, 6], "x_0": [0, 3, 6], "initi": [0, 1, 6], "1": [0, 1, 3, 4, 6, 7, 8], "x1": [0, 6], "x_1": [0, 3, 6], "x2": [0, 6], "x_2": [0, 3, 6, 7], "x3": [0, 6], "x_3": [0, 3, 6], "x4": [0, 6], "x_4": [0, 3, 6], "build": [0, 1, 6], "object": [0, 1, 2, 3, 4, 6, 8], "2": [0, 4, 6, 7, 8], "set": [0, 1, 5, 6, 7], "sens": [0, 1, 4, 6, 7], "minim": [0, 1, 4, 6, 7], "print": [0, 1, 3, 4, 6], "eval": [0, 1, 6], "runner": [0, 1, 6], "load": 0, "default": [0, 1, 2, 6, 8], "spec": [0, 1, 6, 8], "getd": [0, 6], "optim": [0, 1, 3, 5, 6, 7, 8], "class": [1, 4], "quantagonia": [1, 3, 4, 5, 6, 8], "maxim": [1, 6, 7], "A": [1, 6], "repres": 1, "quadrat": [1, 4], "unconstrain": 1, "binari": [1, 3, 4], "instanc": [1, 3, 4, 8], "method": [1, 2], "name": [1, 3, 4], "str": 1, "none": 1, "fix": [1, 6, 7, 8], "disable_warn": 1, "fals": [1, 8], "add": 1, "new": [1, 5, 7], "ar": [1, 5, 6, 8], "can": [1, 3, 6, 7, 8], "take": [1, 7], "valu": [1, 2, 3, 6, 7, 8], "0": [1, 2, 3, 4, 6, 7, 8], "paramet": [1, 8], "ani": [1, 8], "which": [1, 6, 7, 8], "should": [1, 7], "bool": 1, "If": [1, 5, 7, 8], "true": [1, 3, 8], "disabl": [1, 8], "warn": 1, "messag": 1, "displai": 1, "when": [1, 7, 8], "same": [1, 6, 7], "alreadi": 1, "return": [1, 2, 4, 6, 8], "qubovari": 1, "wa": 1, "ad": 1, "type": 1, "rais": 1, "function": [1, 3, 4, 6], "current": 1, "assign": [1, 6, 7], "after": [1, 6, 8], "provid": [1, 5], "": [1, 3, 6, 7], "float": [1, 7], "getnnzuppertriangl": 1, "get": 1, "number": [1, 4, 7], "nonzero": 1, "entri": [1, 7], "upper": [1, 7], "triangl": [1, 7], "matrix": [1, 7], "correspond": 1, "term": 1, "exclud": 1, "shift": 1, "integ": [1, 3, 7], "int": 1, "getnnzfullmatrix": 1, "comput": 1, "full": [1, 8], "demand": 1, "isvalid": 1, "check": 1, "all": [1, 7], "thei": 1, "have": [1, 7], "been": 1, "reduc": 1, "right": 1, "wai": [1, 6], "indic": 1, "whether": [1, 5], "condit": 1, "classmethod": 1, "readqubo": [1, 6], "path": [1, 6], "read": 1, "file": 1, "string": [1, 2, 7], "contain": [1, 6], "properti": 1, "argument": [1, 8], "pass": [1, 6], "member": 1, "specifi": [1, 7], "an": [1, 2, 3, 4, 5, 6, 8], "either": [1, 7], "runtimeerror": 1, "dict": 1, "us": [1, 4, 5, 6, 7, 8], "dictionari": [1, 6], "solut": [1, 2, 3, 6, 7], "obtain": 1, "async": 1, "solveasync": 1, "asynchron": 1, "retriev": [1, 8], "keyerror": 1, "exist": 1, "writequbo": [1, 6], "write": 1, "destin": 1, "except": 1, "filenotfounderror": 1, "cannot": 1, "found": [1, 6, 8], "permissionerror": 1, "program": 1, "doe": [1, 4], "suffici": 1, "permiss": 1, "access": 1, "typeerror": 1, "server": 1, "hybridsolverserv": 1, "prod": 1, "suppress_log": 1, "subclass": 1, "result": [1, 6], "solver_log": [1, 6], "solution_fil": [1, 6], "statu": [1, 6], "api": [1, 3, 4, 6], "authent": 1, "hybrid": 1, "servic": 1, "product": 1, "boolean": 1, "suppress": 1, "log": [1, 2, 6], "output": 1, "https_client": 1, "specshttpsclient": 1, "make": [1, 7, 8], "request": 1, "interrupt_job": 1, "jobid": 1, "modul": [1, 6], "uuid": 1, "usr": 1, "lib": 1, "python3": 1, "9": [1, 3, 4, 8], "py": 1, "send": 1, "interrupt": 1, "signal": 1, "stop": [1, 8], "execut": 1, "job": [1, 2], "respons": 1, "interrupt_job_async": 1, "problem_fil": 1, "kwarg": 1, "keyword": 1, "submit_callback": 1, "custom": 1, "callback": 1, "call": 1, "poll_frequ": 1, "frequenc": 1, "second": [1, 6, 7, 8], "poll": 1, "new_incumbent_callback": 1, "incumb": 1, "batch": 1, "item": [1, 3, 4], "timeout": 1, "maximum": [1, 6, 8], "amount": 1, "time": [1, 6, 7], "wait": 1, "finish": [1, 6], "befor": [1, 8], "out": 1, "14400": 1, "asynchon": 1, "solvebatch": [1, 6], "list": 1, "For": [1, 3, 8], "each": [1, 3, 4, 7, 8], "final": [1, 6], "solvebatchedasync": 1, "waitforjob": 1, "batch_siz": [1, 6], "jobstatu": 1, "identifi": 1, "until": 1, "reach": [1, 8], "exceed": 1, "updat": 1, "solverlog": 1, "size": 1, "ha": [1, 6, 8], "termin": 1, "waitforjobasync": 1, "mipspecbuild": [1, 6], "mix": [1, 6], "extend": 1, "specbuild": 1, "base": 1, "problem_typ": 1, "set_heurist": 1, "heurist": [1, 2], "mip_heuristic_effort": 1, "rang": [1, 4, 5, 6], "control": [1, 8], "percentag": 1, "valueerror": 1, "within": 1, "root_node_onli": 1, "restrict": 1, "root": [1, 8], "node": [1, 6], "search": [1, 8], "tree": 1, "set_absolute_gap": [1, 8], "abs_gap": [1, 8], "absolut": [1, 6], "gap": [1, 6], "fall": 1, "below": 1, "set_decomposit": 1, "decomposit": 1, "enabl": [1, 2, 8], "set_enumer": [1, 8], "enumer": 1, "subproblem": 1, "threshold": 1, "set_max_num_nod": [1, 8], "max_num_nod": 1, "limit": [1, 3, 4], "branch": [1, 2, 8], "bound": [1, 2, 6, 8], "greater": 1, "than": [1, 7], "equal": 1, "set_node_presolv": [1, 8], "node_presolv": 1, "presolv": [1, 2, 6], "set_objective_cutoff": 1, "cutoff_valu": 1, "cutoff": 1, "set_presolv": [1, 8], "set_relative_gap": [1, 8], "rel_gap": [1, 8], "rel": [1, 6], "hold": 1, "dwavebqmadapt": 1, "dimod": [1, 4], "binaryquadraticmodel": 1, "so": 1, "we": [1, 5, 7, 8], "also": [1, 5, 6, 8], "process": [1, 8], "dwavecqmadapt": [1, 4], "penalti": [1, 4, 7], "1000": 1, "constrainedquadraticmodel": [1, 4], "checkcqmsupport": 1, "input": 1, "support": [1, 2, 3], "unsupport": 1, "constraint": [1, 4], "non": [1, 6, 7], "linear": [1, 4], "convertlinearconstraint": 1, "convertobject": 1, "given": [1, 6, 8], "qiskitqpadapt": [1, 4], "ibm": 1, "qiskit_optim": 1, "__init__": 1, "1e3": 1, "checkqpsupport": 1, "qp": [1, 4], "pyquboadapt": 1, "explicitli": [1, 8], "alwai": 1, "assum": 1, "pqm": 1, "constant": [1, 7], "verbos": 1, "scaleequalityconstraint": 1, "scaleobject": 1, "intermedi": 1, "dure": [1, 8], "scale": 1, "var": [1, 6], "represent": 1, "quboexpress": 1, "fromip": 1, "mip_format": 1, "mipsourceformat": 1, "toqubo": 1, "transform": 1, "weight": [1, 4], "union": 1, "factor": 1, "adjust": [1, 8], "respect": 1, "ipviaqubosolv": 1, "abstract": 1, "addit": [1, 6], "inform": 1, "about": 1, "iptoqubo": 1, "iter": [1, 6], "todo": 1, "what": 1, "reportsolut": 1, "solveip": [1, 3], "lpproblem": [1, 3], "automaticpenaltyscalingipviaqubosolv": [1, 3], "initial_penalti": 1, "hsolver_typ": 1, "hybridsolverconnectiontyp": [1, 3], "max_it": [1, 3], "100": [1, 3], "automat": [1, 7], "find": 1, "feasibl": 1, "oneshotipviaqubosolv": 1, "one": [1, 4, 6, 7], "shot": 1, "appli": 1, "violat": 1, "connect": 1, "version": 2, "55": 2, "instead": [2, 8], "now": 2, "addition": 2, "statist": [2, 6], "like": [2, 5], "runtim": 2, "etc": [2, 8], "54": [2, 3], "score": 2, "decis": 2, "53": 2, "coeffici": 2, "tighten": 2, "part": 2, "longer": 2, "remov": 2, "It": [2, 3, 4, 6], "possibl": [2, 3, 4, 6], "quantum": [2, 5, 8], "e": [2, 7, 8], "g": [2, 8], "simul": 2, "done": [2, 6, 8], "add_quantum_heurist": 2, "even": 3, "though": 3, "directli": [3, 6], "more": [3, 7, 8], "effici": 3, "usag": 3, "exampl": [3, 4, 6, 8], "knapsack": 3, "qpulp_adapt": 3, "qpulpadapt": 3, "q_solver": 3, "getsolv": 3, "subset": [3, 4], "sum": [3, 4, 7], "prob": 3, "lpmaxim": 3, "lpvariabl": 3, "lpbinari": 3, "x_5": 3, "x_6": 3, "x_7": 3, "x_8": 3, "36": 3, "43": 3, "90": 3, "45": 3, "30": [3, 6], "56": 3, "67": 3, "95": 3, "98": 3, "obj": 3, "38": 3, "24": 3, "40": 3, "25": 3, "37": 3, "59": 3, "150": 3, "capac": [3, 4], "as_qubo": 3, "v": 3, "t": 3, "varvalu": 3, "optimis": 3, "screen": 3, "qubo_obj": 3, "howev": [4, 8], "pack": 4, "def": 4, "build_ocean_cqm": 4, "7": 4, "y_j": 4, "bin": 4, "j": [4, 7], "x_i_j": 4, "y": 4, "f": [4, 6, 7, 8], "y_": 4, "len": [4, 6], "x": [4, 7], "x_": 4, "_": 4, "set_object": 4, "ensur": 4, "exactli": 4, "add_constraint": 4, "label": 4, "item_placing_": 4, "total": 4, "exce": 4, "capacity_bin_": 4, "__name__": 4, "__main__": 4, "qubo_convert": 4, "1e2": 4, "implement": 4, "build_qiskit_qp": 4, "binary_var": 4, "linear_constraint": 4, "rh": 4, "lhs_x": 4, "lhs_y": 4, "prettyprint": 4, "welcom": 5, "In": [5, 6], "seri": 5, "cover": 5, "topic": 5, "relat": 5, "includ": 5, "other": [5, 8], "framework": 5, "dive": 5, "tailor": 5, "re": [5, 6], "look": 5, "complex": 5, "want": 5, "explor": [5, 8], "potenti": [5, 8], "own": 5, "research": 5, "valuabl": 5, "tool": 5, "achiev": 5, "goal": 5, "world": 5, "recommend": 5, "bridg": 5, "analyt": 5, "formul": 5, "introduct": 5, "There": 6, "sever": [6, 8], "hand": 6, "see": 6, "while": 6, "edit": 6, "To": 6, "first": [6, 7, 8], "o": 6, "remot": 6, "both": 6, "altern": 6, "mp": 6, "accept": 6, "here": [6, 7], "step": 6, "input_file_path": 6, "join": 6, "dirnam": 6, "abspath": 6, "__file__": 6, "example3": 6, "res_dict": 6, "nquantagonia": 6, "hybridsolv": 6, "ncopyright": 6, "c": [6, 7], "2023": 6, "gmbh": 6, "nhybridsolv": 6, "integr": 6, "variou": [6, 8], "open": 6, "sourc": 6, "n": [6, 7], "nfloat": 6, "point": 6, "datatyp": 6, "doubl": 6, "nread": 6, "num": 6, "6": [6, 7, 8], "zero": [6, 7], "noptim": 6, "nbranch": 6, "rule": 6, "contribut": 6, "nrun": 6, "hardwar": 6, "cpu": 6, "nstart": 6, "npresolv": 6, "00": 6, "implic": [6, 8], "nthe": 6, "nsolver": 6, "wall": 6, "500000e": 6, "01": [6, 8], "000000e": 6, "0000e": 6, "dual": 6, "clip": 6, "oscil": 6, "n1": 6, "success": 6, "multipl": 6, "onc": [6, 8], "differ": [6, 8], "option": [6, 8], "mip_path0": 6, "mip_path1": 6, "example2": 6, "qubo_path": 6, "mip_spec": 6, "qubo_spec": 6, "ix": [6, 7], "arrai": 6, "order": 6, "match": 6, "where": [6, 7], "document": 7, "describ": 7, "form": 7, "tqx": 7, "mathbb": 7, "r": 7, "scalar": 7, "sought": 7, "vector": 7, "q": 7, "symmetr": 7, "header": 7, "line": 7, "separ": 7, "space": [7, 8], "need": 7, "singl": 7, "num_problem": 7, "matric": 7, "principl": 7, "view": 7, "present": 7, "accumul": 7, "them": 7, "up": [7, 8], "report": 7, "structur": 7, "recurs": 7, "offset": 7, "energi": 7, "two": 7, "nnz": 7, "dimens": 7, "row": 7, "column": 7, "written": 7, "q_": 7, "ij": 7, "posit": 7, "becaus": [7, 8], "diagon": 7, "triangular": 7, "formal": 7, "mean": 7, "le": 7, "whose": 7, "ahead": 7, "val": 7, "index": 7, "offest": 7, "4": [7, 8], "5": 7, "repeat": 7, "abov": 7, "without": [7, 8], "comment": 7, "correct": 7, "would": 7, "begin": 7, "bmatrix": 7, "end": 7, "quad": 7, "some": 8, "guid": 8, "behavior": 8, "conveni": 8, "most": 8, "relev": 8, "expos": 8, "builder": 8, "interupt": 8, "best": 8, "along": 8, "tell": 8, "how": 8, "much": 8, "could": 8, "ordinari": 8, "anneal": 8, "know": 8, "far": 8, "might": 8, "awai": 8, "time_limit": 8, "10": 8, "set_time_limit": 8, "mimick": 8, "qualiti": 8, "assess": 8, "proof": 8, "global": 8, "compar": 8, "sure": 8, "our": 8, "still": 8, "case": 8, "num_nod": 8, "toler": 8, "1e": 8, "between": 8, "f\u02c9": 8, "henc": 8, "increas": 8, "continu": 8, "defin": 8, "ast": 8, "bar": 8, "improv": 8, "known": 8, "actual": 8, "perform": 8, "routin": 8, "due": 8, "deriv": 8, "gener": 8, "compon": 8, "strengthen": 8, "set_coeff_strengthen": 8, "userwarn": 8, "coeff_strengthen": 8, "effect": 8, "similar": 8, "sub": 8, "turn": 8, "off": 8, "usual": 8, "work": 8, "just": 8, "fine": 8, "mai": 8, "benefici": 8, "through": 8, "mani": 8, "smaller": 8, "small": 8, "enough": 8, "extrem": 8, "fast": 8}, "objects": {"quantagonia.cloud.cloud_runner": [[1, 0, 1, "", "CloudRunner"]], "quantagonia.cloud.cloud_runner.CloudRunner": [[1, 1, 1, "", "https_client"], [1, 2, 1, "", "interrupt_job"], [1, 2, 1, "", "interrupt_job_async"], [1, 2, 1, "", "solve"], [1, 2, 1, "", "solveAsync"], [1, 2, 1, "", "solveBatched"], [1, 2, 1, "", "solveBatchedAsync"], [1, 2, 1, "", "waitForJob"], [1, 2, 1, "", "waitForJobAsync"]], "quantagonia.enums": [[1, 0, 1, "", "HybridSolverOptSenses"]], "quantagonia.enums.HybridSolverOptSenses": [[1, 1, 1, "", "MAXIMIZE"], [1, 1, 1, "", "MINIMIZE"]], "quantagonia.qubo": [[1, 3, 0, "-", "adapters"], [1, 3, 0, "-", "ip2qubo"]], "quantagonia.qubo.adapters": [[1, 0, 1, "", "DWaveBQMAdapter"], [1, 0, 1, "", "DWaveCQMAdapter"], [1, 0, 1, "", "PyQUBOAdapter"], [1, 0, 1, "", "QiskitQPAdapter"]], "quantagonia.qubo.adapters.DWaveBQMAdapter": [[1, 2, 1, "", "convert"]], "quantagonia.qubo.adapters.DWaveCQMAdapter": [[1, 2, 1, "", "checkCQMSupported"], [1, 2, 1, "", "convert"], [1, 2, 1, "", "convertLinearConstraints"], [1, 2, 1, "", "convertObjective"]], "quantagonia.qubo.adapters.PyQUBOAdapter": [[1, 2, 1, "", "convert"]], "quantagonia.qubo.adapters.QiskitQPAdapter": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "checkQPSupported"], [1, 2, 1, "", "convert"], [1, 2, 1, "", "convertLinearConstraints"], [1, 2, 1, "", "convertObjective"]], "quantagonia.qubo.ip2qubo": [[1, 0, 1, "", "AutomaticPenaltyScalingIPviaQUBOSolver"], [1, 0, 1, "", "IP2Qubo"], [1, 0, 1, "", "IPviaQUBOSolver"], [1, 0, 1, "", "MIPSourceFormat"], [1, 0, 1, "", "OneShotIPviaQUBOSolver"]], "quantagonia.qubo.ip2qubo.AutomaticPenaltyScalingIPviaQUBOSolver": [[1, 1, 1, "", "api_key"], [1, 1, 1, "", "hsolver_type"], [1, 1, 1, "", "initial_penalty"]], "quantagonia.qubo.ip2qubo.IP2Qubo": [[1, 1, 1, "", "constraints"], [1, 2, 1, "", "fromIP"], [1, 1, 1, "", "objective"], [1, 1, 1, "", "sense"], [1, 2, 1, "", "toQUBO"], [1, 1, 1, "", "vars"], [1, 1, 1, "", "verbose"]], "quantagonia.qubo.ip2qubo.IPviaQUBOSolver": [[1, 1, 1, "", "ip2qubo"], [1, 1, 1, "", "iter"], [1, 2, 1, "", "reportSolution"], [1, 2, 1, "", "solveIP"], [1, 1, 1, "", "verbose"]], "quantagonia.qubo.model": [[1, 0, 1, "", "QuboModel"]], "quantagonia.qubo.model.QuboModel": [[1, 2, 1, "", "addVariable"], [1, 2, 1, "", "eval"], [1, 2, 1, "", "getNNZUpperTriangle"], [1, 2, 1, "", "getNnzFullMatrix"], [1, 2, 1, "", "isValid"], [1, 2, 1, "", "readQUBO"], [1, 4, 1, "", "sense"], [1, 2, 1, "", "solve"], [1, 2, 1, "", "solveAsync"], [1, 2, 1, "", "variable"], [1, 2, 1, "", "writeQUBO"]], "quantagonia": [[1, 3, 0, "-", "spec_builder"]], "quantagonia.spec_builder": [[1, 0, 1, "", "MIPSpecBuilder"], [1, 0, 1, "", "QUBOSpecBuilder"]], "quantagonia.spec_builder.MIPSpecBuilder": [[1, 2, 1, "", "set_heuristics"]], "quantagonia.spec_builder.QUBOSpecBuilder": [[1, 2, 1, "", "root_node_only"], [1, 2, 1, "", "set_absolute_gap"], [1, 2, 1, "", "set_decomposition"], [1, 2, 1, "", "set_enumeration"], [1, 2, 1, "", "set_max_num_nodes"], [1, 2, 1, "", "set_node_presolve"], [1, 2, 1, "", "set_objective_cutoff"], [1, 2, 1, "", "set_presolve"], [1, 2, 1, "", "set_relative_gap"]]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:module", "4": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "module", "Python module"], "4": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "document": 0, "quantagonia": [0, 7], "": 0, "api": 0, "client": 0, "content": [0, 1, 5, 6], "instal": 0, "exampl": [0, 7], "refer": 1, "tabl": [1, 6], "model": [1, 6], "qubo": [1, 3, 6, 7, 8], "solv": [1, 3, 6], "solver": [1, 8], "option": 1, "adapt": 1, "d": 1, "wave": 1, "pyqubo": 1, "qiskit": [1, 4], "ip2qubo": 1, "releas": 2, "note": 2, "ip": 3, "convers": 3, "creat": [3, 6], "mip": [3, 6], "convert": 4, "from": [4, 6], "ocean": 4, "tutori": 5, "problem": 6, "load": 6, "store": 6, "file": [6, 7], "submit": 6, "instanc": 6, "format": 7, "descript": 7, "syntax": 7, "specif": 8, "termin": 8, "set": 8, "time": 8, "limit": 8, "max": 8, "number": 8, "node": 8, "absolut": 8, "gap": 8, "rel": 8, "presolv": 8, "coeffici": 8, "strenghten": 8, "solut": 8, "strategi": 8, "enumer": 8}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to the documentation of Quantagonia\u2019s API client!": [[0, "welcome-to-the-documentation-of-quantagonia-s-api-client"]], "Contents:": [[0, null], [5, null]], "Installation": [[0, "installation"]], "Example": [[0, "example"], [7, "example"]], "Reference": [[1, "reference"]], "Table of Contents": [[1, "table-of-contents"], [6, "table-of-contents"]], "Modeling QUBOs": [[1, "modeling-qubos"]], "Solving": [[1, "solving"]], "Solver Options": [[1, "module-quantagonia.spec_builder"]], "Adapters for D-Wave, PyQUBO and Qiskit": [[1, "adapters-for-d-wave-pyqubo-and-qiskit"]], "IP2QUBO": [[1, "ip2qubo"]], "Release Notes": [[2, "release-notes"]], "Solving IP and Conversion to QUBO": [[3, "solving-ip-and-conversion-to-qubo"]], "Creating a MIP": [[3, "creating-a-mip"]], "Converting from Ocean and Qiskit": [[4, "converting-from-ocean-and-qiskit"]], "Converting from Ocean": [[4, "converting-from-ocean"]], "Converting from Qiskit": [[4, "converting-from-qiskit"]], "Tutorials": [[5, "tutorials"]], "Creating and Solving QUBO Problems": [[6, "creating-and-solving-qubo-problems"]], "Creating a QUBO": [[6, "creating-a-qubo"]], "Loading and Storing QUBOs from/as files": [[6, "loading-and-storing-qubos-from-as-files"]], "Submitting QUBOs and MIPs for solving": [[6, "submitting-qubos-and-mips-for-solving"]], "Submitting a modeled instance": [[6, "submitting-a-modeled-instance"]], "Submitting files": [[6, "submitting-files"]], "Quantagonia QUBO format": [[7, "quantagonia-qubo-format"]], "Description": [[7, "description"]], "File syntax": [[7, "file-syntax"]], "QUBO Solver Specifications": [[8, "qubo-solver-specifications"]], "Termination Settings": [[8, "termination-settings"]], "Time limit": [[8, "time-limit"]], "Max number of nodes": [[8, "max-number-of-nodes"]], "Absolute gap": [[8, "absolute-gap"]], "Relative gap": [[8, "relative-gap"]], "Presolve settings": [[8, "presolve-settings"]], "Presolve": [[8, "presolve"]], "Coefficient strenghtening": [[8, "coefficient-strenghtening"]], "Node presolve": [[8, "node-presolve"]], "Solution strategy": [[8, "solution-strategy"]], "Enumeration": [[8, "enumeration"]]}, "indexentries": {"automaticpenaltyscalingipviaqubosolver (class in quantagonia.qubo.ip2qubo)": [[1, "quantagonia.qubo.ip2qubo.AutomaticPenaltyScalingIPviaQUBOSolver"]], "cloudrunner (class in quantagonia.cloud.cloud_runner)": [[1, "quantagonia.cloud.cloud_runner.CloudRunner"]], "dwavebqmadapter (class in quantagonia.qubo.adapters)": [[1, "quantagonia.qubo.adapters.DWaveBQMAdapter"]], "dwavecqmadapter (class in quantagonia.qubo.adapters)": [[1, "quantagonia.qubo.adapters.DWaveCQMAdapter"]], "hybridsolveroptsenses (class in quantagonia.enums)": [[1, "quantagonia.enums.HybridSolverOptSenses"]], "ip2qubo (class in quantagonia.qubo.ip2qubo)": [[1, "quantagonia.qubo.ip2qubo.IP2Qubo"]], "ipviaqubosolver (class in quantagonia.qubo.ip2qubo)": [[1, "quantagonia.qubo.ip2qubo.IPviaQUBOSolver"]], "maximize (quantagonia.enums.hybridsolveroptsenses attribute)": [[1, "quantagonia.enums.HybridSolverOptSenses.MAXIMIZE"]], "minimize (quantagonia.enums.hybridsolveroptsenses attribute)": [[1, "quantagonia.enums.HybridSolverOptSenses.MINIMIZE"]], "mipsourceformat (class in quantagonia.qubo.ip2qubo)": [[1, "quantagonia.qubo.ip2qubo.MIPSourceFormat"]], "mipspecbuilder (class in quantagonia.spec_builder)": [[1, "quantagonia.spec_builder.MIPSpecBuilder"]], "oneshotipviaqubosolver (class in quantagonia.qubo.ip2qubo)": [[1, "quantagonia.qubo.ip2qubo.OneShotIPviaQUBOSolver"]], "pyquboadapter (class in quantagonia.qubo.adapters)": [[1, "quantagonia.qubo.adapters.PyQUBOAdapter"]], "qubospecbuilder (class in quantagonia.spec_builder)": [[1, "quantagonia.spec_builder.QUBOSpecBuilder"]], "qiskitqpadapter (class in quantagonia.qubo.adapters)": [[1, "quantagonia.qubo.adapters.QiskitQPAdapter"]], "qubomodel (class in quantagonia.qubo.model)": [[1, "quantagonia.qubo.model.QuboModel"]], "__init__() (quantagonia.qubo.adapters.qiskitqpadapter method)": [[1, "quantagonia.qubo.adapters.QiskitQPAdapter.__init__"]], "addvariable() (quantagonia.qubo.model.qubomodel method)": [[1, "quantagonia.qubo.model.QuboModel.addVariable"]], "api_key (quantagonia.qubo.ip2qubo.automaticpenaltyscalingipviaqubosolver attribute)": [[1, "quantagonia.qubo.ip2qubo.AutomaticPenaltyScalingIPviaQUBOSolver.api_key"]], "checkcqmsupported() (quantagonia.qubo.adapters.dwavecqmadapter method)": [[1, "quantagonia.qubo.adapters.DWaveCQMAdapter.checkCQMSupported"]], "checkqpsupported() (quantagonia.qubo.adapters.qiskitqpadapter method)": [[1, "quantagonia.qubo.adapters.QiskitQPAdapter.checkQPSupported"]], "constraints (quantagonia.qubo.ip2qubo.ip2qubo attribute)": [[1, "quantagonia.qubo.ip2qubo.IP2Qubo.constraints"]], "convert() (quantagonia.qubo.adapters.dwavebqmadapter method)": [[1, "quantagonia.qubo.adapters.DWaveBQMAdapter.convert"]], "convert() (quantagonia.qubo.adapters.dwavecqmadapter method)": [[1, "quantagonia.qubo.adapters.DWaveCQMAdapter.convert"]], "convert() (quantagonia.qubo.adapters.pyquboadapter method)": [[1, "quantagonia.qubo.adapters.PyQUBOAdapter.convert"]], "convert() (quantagonia.qubo.adapters.qiskitqpadapter method)": [[1, "quantagonia.qubo.adapters.QiskitQPAdapter.convert"]], "convertlinearconstraints() (quantagonia.qubo.adapters.dwavecqmadapter method)": [[1, "quantagonia.qubo.adapters.DWaveCQMAdapter.convertLinearConstraints"]], "convertlinearconstraints() (quantagonia.qubo.adapters.qiskitqpadapter method)": [[1, "quantagonia.qubo.adapters.QiskitQPAdapter.convertLinearConstraints"]], "convertobjective() (quantagonia.qubo.adapters.dwavecqmadapter method)": [[1, "quantagonia.qubo.adapters.DWaveCQMAdapter.convertObjective"]], "convertobjective() (quantagonia.qubo.adapters.qiskitqpadapter method)": [[1, "quantagonia.qubo.adapters.QiskitQPAdapter.convertObjective"]], "eval() (quantagonia.qubo.model.qubomodel method)": [[1, "quantagonia.qubo.model.QuboModel.eval"]], "fromip() (quantagonia.qubo.ip2qubo.ip2qubo method)": [[1, "quantagonia.qubo.ip2qubo.IP2Qubo.fromIP"]], "getnnzuppertriangle() (quantagonia.qubo.model.qubomodel method)": [[1, "quantagonia.qubo.model.QuboModel.getNNZUpperTriangle"]], "getnnzfullmatrix() (quantagonia.qubo.model.qubomodel method)": [[1, "quantagonia.qubo.model.QuboModel.getNnzFullMatrix"]], "hsolver_type (quantagonia.qubo.ip2qubo.automaticpenaltyscalingipviaqubosolver attribute)": [[1, "quantagonia.qubo.ip2qubo.AutomaticPenaltyScalingIPviaQUBOSolver.hsolver_type"]], "https_client (quantagonia.cloud.cloud_runner.cloudrunner attribute)": [[1, "quantagonia.cloud.cloud_runner.CloudRunner.https_client"]], "initial_penalty (quantagonia.qubo.ip2qubo.automaticpenaltyscalingipviaqubosolver attribute)": [[1, "quantagonia.qubo.ip2qubo.AutomaticPenaltyScalingIPviaQUBOSolver.initial_penalty"]], "interrupt_job() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[1, "quantagonia.cloud.cloud_runner.CloudRunner.interrupt_job"]], "interrupt_job_async() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[1, "quantagonia.cloud.cloud_runner.CloudRunner.interrupt_job_async"]], "ip2qubo (quantagonia.qubo.ip2qubo.ipviaqubosolver attribute)": [[1, "quantagonia.qubo.ip2qubo.IPviaQUBOSolver.ip2qubo"]], "isvalid() (quantagonia.qubo.model.qubomodel method)": [[1, "quantagonia.qubo.model.QuboModel.isValid"]], "iter (quantagonia.qubo.ip2qubo.ipviaqubosolver attribute)": [[1, "quantagonia.qubo.ip2qubo.IPviaQUBOSolver.iter"]], "module": [[1, "module-quantagonia.qubo.adapters"], [1, "module-quantagonia.qubo.ip2qubo"], [1, "module-quantagonia.spec_builder"]], "objective (quantagonia.qubo.ip2qubo.ip2qubo attribute)": [[1, "quantagonia.qubo.ip2qubo.IP2Qubo.objective"]], "quantagonia.qubo.adapters": [[1, "module-quantagonia.qubo.adapters"]], "quantagonia.qubo.ip2qubo": [[1, "module-quantagonia.qubo.ip2qubo"]], "quantagonia.spec_builder": [[1, "module-quantagonia.spec_builder"]], "readqubo() (quantagonia.qubo.model.qubomodel class method)": [[1, "quantagonia.qubo.model.QuboModel.readQUBO"]], "reportsolution() (quantagonia.qubo.ip2qubo.ipviaqubosolver method)": [[1, "quantagonia.qubo.ip2qubo.IPviaQUBOSolver.reportSolution"]], "root_node_only() (quantagonia.spec_builder.qubospecbuilder method)": [[1, "quantagonia.spec_builder.QUBOSpecBuilder.root_node_only"]], "sense (quantagonia.qubo.ip2qubo.ip2qubo attribute)": [[1, "quantagonia.qubo.ip2qubo.IP2Qubo.sense"]], "sense (quantagonia.qubo.model.qubomodel property)": [[1, "quantagonia.qubo.model.QuboModel.sense"]], "set_absolute_gap() (quantagonia.spec_builder.qubospecbuilder method)": [[1, "quantagonia.spec_builder.QUBOSpecBuilder.set_absolute_gap"]], "set_decomposition() (quantagonia.spec_builder.qubospecbuilder method)": [[1, "quantagonia.spec_builder.QUBOSpecBuilder.set_decomposition"]], "set_enumeration() (quantagonia.spec_builder.qubospecbuilder method)": [[1, "quantagonia.spec_builder.QUBOSpecBuilder.set_enumeration"]], "set_heuristics() (quantagonia.spec_builder.mipspecbuilder method)": [[1, "quantagonia.spec_builder.MIPSpecBuilder.set_heuristics"]], "set_max_num_nodes() (quantagonia.spec_builder.qubospecbuilder method)": [[1, "quantagonia.spec_builder.QUBOSpecBuilder.set_max_num_nodes"]], "set_node_presolve() (quantagonia.spec_builder.qubospecbuilder method)": [[1, "quantagonia.spec_builder.QUBOSpecBuilder.set_node_presolve"]], "set_objective_cutoff() (quantagonia.spec_builder.qubospecbuilder method)": [[1, "quantagonia.spec_builder.QUBOSpecBuilder.set_objective_cutoff"]], "set_presolve() (quantagonia.spec_builder.qubospecbuilder method)": [[1, "quantagonia.spec_builder.QUBOSpecBuilder.set_presolve"]], "set_relative_gap() (quantagonia.spec_builder.qubospecbuilder method)": [[1, "quantagonia.spec_builder.QUBOSpecBuilder.set_relative_gap"]], "solve() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[1, "quantagonia.cloud.cloud_runner.CloudRunner.solve"]], "solve() (quantagonia.qubo.model.qubomodel method)": [[1, "quantagonia.qubo.model.QuboModel.solve"]], "solveasync() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[1, "quantagonia.cloud.cloud_runner.CloudRunner.solveAsync"]], "solveasync() (quantagonia.qubo.model.qubomodel method)": [[1, "quantagonia.qubo.model.QuboModel.solveAsync"]], "solvebatched() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[1, "quantagonia.cloud.cloud_runner.CloudRunner.solveBatched"]], "solvebatchedasync() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[1, "quantagonia.cloud.cloud_runner.CloudRunner.solveBatchedAsync"]], "solveip() (quantagonia.qubo.ip2qubo.ipviaqubosolver method)": [[1, "quantagonia.qubo.ip2qubo.IPviaQUBOSolver.solveIP"]], "toqubo() (quantagonia.qubo.ip2qubo.ip2qubo method)": [[1, "quantagonia.qubo.ip2qubo.IP2Qubo.toQUBO"]], "variable() (quantagonia.qubo.model.qubomodel method)": [[1, "quantagonia.qubo.model.QuboModel.variable"]], "vars (quantagonia.qubo.ip2qubo.ip2qubo attribute)": [[1, "quantagonia.qubo.ip2qubo.IP2Qubo.vars"]], "verbose (quantagonia.qubo.ip2qubo.ip2qubo attribute)": [[1, "quantagonia.qubo.ip2qubo.IP2Qubo.verbose"]], "verbose (quantagonia.qubo.ip2qubo.ipviaqubosolver attribute)": [[1, "quantagonia.qubo.ip2qubo.IPviaQUBOSolver.verbose"]], "waitforjob() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[1, "quantagonia.cloud.cloud_runner.CloudRunner.waitForJob"]], "waitforjobasync() (quantagonia.cloud.cloud_runner.cloudrunner method)": [[1, "quantagonia.cloud.cloud_runner.CloudRunner.waitForJobAsync"]], "writequbo() (quantagonia.qubo.model.qubomodel method)": [[1, "quantagonia.qubo.model.QuboModel.writeQUBO"]]}})